1
00:00:01,305 --> 00:00:01,790
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:01,813 --> 00:00:06,665
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:06,667 --> 00:00:06,672
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:06,675 --> 00:00:06,681
9. DriverName = ""

5
00:00:06,706 --> 00:00:11,579
13. openBrowser("")

6
00:00:11,581 --> 00:00:11,605
17. driver = getWebDriver()

7
00:00:11,610 --> 00:00:11,645
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:11,650 --> 00:00:11,741
25. out.println(wrappedDriver.getClass())

9
00:00:11,743 --> 00:00:11,746
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:11,747 --> 00:00:11,770
2. DriverName = get("WebUI").get("browserType")

11
00:00:11,771 --> 00:00:11,778
6. println("DriverName :" + DriverName)

12
00:00:11,780 --> 00:00:11,782
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:11,784 --> 00:00:13,333
33. DriverName = DriverName

14
00:00:13,336 --> 00:00:16,380
37. delay(medium_wait)

15
00:00:16,382 --> 00:00:16,386
41. executedBrowser = getExecutedBrowser()

16
00:00:16,388 --> 00:00:16,390
45. if (Profiles == "Usager")

17
00:00:16,391 --> 00:00:16,397
1. switch (DriverName)

18
00:00:16,401 --> 00:00:16,402
4. Navigation à URL  Qualification et Création MDP

19
00:00:16,405 --> 00:00:19,017
1. navigateToUrl(URL_ANEFQualif)

20
00:00:19,020 --> 00:00:19,025
10. Navigation à URL Préprode  et Création MDP

21
00:00:19,027 --> 00:00:19,069
14. maximizeWindow()

22
00:00:19,073 --> 00:00:19,080
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:19,082 --> 00:00:19,084
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:19,085 --> 00:00:20,160
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:20,162 --> 00:00:20,191
3. waiting for the number of elements in the DOM to stop changing

26
00:00:20,194 --> 00:00:20,199
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:20,201 --> 00:00:20,205
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:20,206 --> 00:00:20,529
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:20,530 --> 00:00:22,975
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:22,977 --> 00:00:25,419
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:25,420 --> 00:00:25,422
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:25,424 --> 00:00:28,472
27. delay(3)

33
00:00:28,474 --> 00:00:33,496
32. delay(5)

34
00:00:33,498 --> 00:00:33,756
38. Vérification de l'étape :

35
00:00:33,758 --> 00:00:33,759
42. break

36
00:00:33,761 --> 00:00:33,763
49. if (Profiles == "Agent")

37
00:00:33,765 --> 00:00:33,767
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:33,769 --> 00:00:35,783
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:35,785 --> 00:00:35,794
5. Call Highlight.on() automatically

40
00:00:35,800 --> 00:00:36,001
9. waitForPageLoad(5)

41
00:00:36,004 --> 00:00:38,673
15. Cliquer sur le lien Se Connecter :

42
00:00:38,679 --> 00:00:38,681
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:38,685 --> 00:00:38,785
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:38,788 --> 00:00:38,790
3. waiting for the number of elements in the DOM to stop changing

45
00:00:38,793 --> 00:00:38,794
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:38,795 --> 00:00:38,797
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:38,798 --> 00:00:39,004
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:39,006 --> 00:00:41,292
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:41,293 --> 00:00:43,814
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:43,816 --> 00:00:43,817
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:43,819 --> 00:00:46,836
27. delay(3)

52
00:00:46,838 --> 00:00:50,411
25. Première visiteq? Créez votre compte :

53
00:00:50,412 --> 00:00:50,993
29. waitForPageLoad(5)

54
00:00:50,997 --> 00:00:51,000
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:51,006 --> 00:00:55,719
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:55,721 --> 00:00:55,723
45.  Fournir La Date de début de validité :

57
00:00:55,725 --> 00:00:55,743
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:55,746 --> 00:00:55,747
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:55,750 --> 00:01:00,210
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:01:00,212 --> 00:01:02,773
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:01:02,775 --> 00:01:07,272
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:01:07,274 --> 00:01:07,275
71.  Fournir La Date de fin de validité :

63
00:01:07,278 --> 00:01:07,280
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:01:07,283 --> 00:01:07,287
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:01:07,290 --> 00:01:11,763
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:01:11,768 --> 00:01:14,277
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:01:14,279 --> 00:01:18,730
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:18,732 --> 00:01:21,093
97. Validation de la page pour la création du compte :

69
00:01:21,095 --> 00:01:22,794
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:22,798 --> 00:01:25,808
5.  Exit Action ou on passe à la création

71
00:01:25,810 --> 00:01:25,811
9. StopTestCase = false

72
00:01:25,813 --> 00:01:25,998
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:26,001 --> 00:01:26,002
17. if (MsgAlertPresent)

74
00:01:26,004 --> 00:01:26,164
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

75
00:01:26,166 --> 00:01:26,201
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

76
00:01:26,204 --> 00:01:26,209
9. MsgStopTestCase = TextAlert

77
00:01:26,211 --> 00:01:26,215
13. return null

78
00:01:26,217 --> 00:01:26,219
111. Exit TestCase

79
00:01:26,221 --> 00:01:26,224
1. return null

80
00:01:26,226 --> 00:01:26,229
17. if (StopTestCase == false)

