1
00:00:00,002 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,006 --> 00:00:00,076
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,077 --> 00:00:00,077
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,078 --> 00:00:00,078
9. DriverName = ""

5
00:00:00,079 --> 00:00:03,630
13. openBrowser("")

6
00:00:03,632 --> 00:00:03,632
17. driver = getWebDriver()

7
00:00:03,634 --> 00:00:03,636
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,638 --> 00:00:03,639
25. out.println(wrappedDriver.getClass())

9
00:00:03,639 --> 00:00:03,639
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,639 --> 00:00:03,639
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,639 --> 00:00:03,639
6. println("DriverName :" + DriverName)

12
00:00:03,639 --> 00:00:03,639
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,639 --> 00:00:03,646
33. DriverName = DriverName

14
00:00:03,647 --> 00:00:06,656
37. delay(medium_wait)

15
00:00:06,657 --> 00:00:06,657
41. executedBrowser = getExecutedBrowser()

16
00:00:06,658 --> 00:00:06,659
45. if (Profiles == "Usager")

17
00:00:06,659 --> 00:00:06,660
1. switch (DriverName)

18
00:00:06,660 --> 00:00:06,661
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,661 --> 00:00:09,145
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,147 --> 00:00:09,148
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,149 --> 00:00:09,179
14. maximizeWindow()

22
00:00:09,180 --> 00:00:09,181
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,182 --> 00:00:09,182
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,184 --> 00:00:09,261
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,262 --> 00:00:09,264
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,266 --> 00:00:09,268
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,270 --> 00:00:09,270
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,271 --> 00:00:09,444
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,445 --> 00:00:11,700
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,702 --> 00:00:14,050
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,052 --> 00:00:14,053
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,054 --> 00:00:17,069
27. delay(3)

33
00:00:17,071 --> 00:00:22,085
32. delay(5)

34
00:00:22,086 --> 00:00:22,263
38. Vérification de l'étape :

35
00:00:22,264 --> 00:00:22,265
42. break

36
00:00:22,267 --> 00:00:22,268
49. if (Profiles == "Agent")

37
00:00:22,269 --> 00:00:22,271
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,271 --> 00:00:22,349
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,350 --> 00:00:22,352
5. Call Highlight.on() automatically

40
00:00:22,353 --> 00:00:22,370
9. waitForPageLoad(5)

41
00:00:22,371 --> 00:00:24,941
15. Cliquer sur le lien Se Connecter :

42
00:00:24,943 --> 00:00:24,944
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,945 --> 00:00:25,030
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,031 --> 00:00:25,032
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,033 --> 00:00:25,034
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,035 --> 00:00:25,036
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,038 --> 00:00:25,235
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,237 --> 00:00:27,556
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,558 --> 00:00:29,927
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,929 --> 00:00:29,930
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,932 --> 00:00:32,944
27. delay(3)

52
00:00:32,946 --> 00:00:36,638
25. Première visiteq? Créez votre compte :

53
00:00:36,639 --> 00:00:36,660
29. waitForPageLoad(5)

54
00:00:36,661 --> 00:00:36,662
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,664 --> 00:00:41,728
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,730 --> 00:00:41,731
45.  Fournir La Date de début de validité :

57
00:00:41,733 --> 00:00:41,733
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,734 --> 00:00:41,735
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,737 --> 00:00:46,124
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:46,126 --> 00:00:48,568
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,571 --> 00:00:52,896
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,898 --> 00:00:52,899
71.  Fournir La Date de fin de validité :

63
00:00:52,901 --> 00:00:52,902
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,904 --> 00:00:52,904
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,906 --> 00:00:57,268
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:57,270 --> 00:00:59,846
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,849 --> 00:01:04,197
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:04,199 --> 00:01:06,457
97. Validation de la page pour la création du compte :

69
00:01:06,458 --> 00:01:06,532
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,532 --> 00:01:09,532
5.  Exit Action ou on passe à la création

71
00:01:09,535 --> 00:01:09,535
9. StopTestCase = false

72
00:01:09,536 --> 00:01:15,858
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,860 --> 00:01:15,860
17. if (MsgAlertPresent)

74
00:01:15,863 --> 00:01:15,863
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,865 --> 00:01:15,894
21. waitForPageLoad(2)

76
00:01:15,895 --> 00:01:15,896
111. Exit TestCase

77
00:01:15,898 --> 00:01:15,975
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,977 --> 00:01:18,984
5.  Exit Action ou on passe à la création

79
00:01:18,984 --> 00:01:18,986
9. StopTestCase = false

80
00:01:18,987 --> 00:01:22,282
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,284 --> 00:01:22,286
17. if (MsgAlertPresent)

82
00:01:22,287 --> 00:01:22,289
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,291 --> 00:01:22,320
21. waitForPageLoad(2)

84
00:01:22,321 --> 00:01:22,321
125. Exit TestCase

85
00:01:22,322 --> 00:01:22,322
131.  Création de Email utilisateur

86
00:01:22,323 --> 00:01:24,332
135. delay(2)

87
00:01:24,333 --> 00:01:29,079
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:29,081 --> 00:01:33,779
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,781 --> 00:01:36,041
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:36,042 --> 00:01:38,048
151. delay(2)

91
00:01:38,051 --> 00:01:40,458
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,460 --> 00:01:42,475
159. delay(2)

93
00:01:42,477 --> 00:01:42,513
165. Get all cookies after Event NetWork in Page

94
00:01:42,515 --> 00:01:42,516
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,517 --> 00:01:42,518
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,521 --> 00:01:44,596
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,598 --> 00:01:44,599
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,601 --> 00:01:44,689
183. Vérification de la conformité du nouveau MDP

99
00:01:44,691 --> 00:01:44,693
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,695 --> 00:01:44,696
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,698 --> 00:01:49,387
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,390 --> 00:01:53,979
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,981 --> 00:01:56,283
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,285 --> 00:01:56,452
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,452 --> 00:01:56,455
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,459 --> 00:02:01,208
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,211 --> 00:02:05,958
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,960 --> 00:02:08,289
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,292 --> 00:02:08,455
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,457 --> 00:02:08,458
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,459 --> 00:02:13,145
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,148 --> 00:02:17,802
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,804 --> 00:02:20,039
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:20,041 --> 00:02:20,155
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,157 --> 00:02:20,157
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,159 --> 00:02:24,823
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,827 --> 00:02:29,572
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,573 --> 00:02:31,831
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,834 --> 00:02:31,959
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,962 --> 00:02:31,962
87. println("Saisir 2 mots de passe différents")

121
00:02:31,963 --> 00:02:36,567
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,569 --> 00:02:41,254
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,256 --> 00:02:43,533
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,535 --> 00:02:43,694
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,697 --> 00:02:43,699
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,701 --> 00:02:48,361
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,363 --> 00:02:52,865
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,868 --> 00:02:55,119
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:55,121 --> 00:02:55,276
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,276 --> 00:02:59,859
189. Renseigner PDM Valide

131
00:02:59,861 --> 00:03:04,403
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,404 --> 00:03:06,659
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,661 --> 00:03:10,181
203. Retour à l'accueil

134
00:03:10,184 --> 00:03:10,222
207. waitForPageLoad(5)

135
00:03:10,223 --> 00:03:10,224
17. if (StopTestCase == false)

136
00:03:10,226 --> 00:03:10,316
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:10,318 --> 00:03:10,318
1. if (Profiles == "Usager")

138
00:03:10,320 --> 00:03:15,338
1. delay(5)

139
00:03:15,340 --> 00:03:18,017
7.  Cliquer sur le lien Se Connecter :

140
00:03:18,020 --> 00:03:18,097
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:18,099 --> 00:03:18,099
3. waiting for the number of elements in the DOM to stop changing

142
00:03:18,101 --> 00:03:18,101
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:18,102 --> 00:03:18,103
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:18,104 --> 00:03:21,398
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:21,401 --> 00:03:21,403
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:21,403 --> 00:03:24,405
27. delay(3)

147
00:03:24,407 --> 00:03:29,417
17. delay(5)

148
00:03:29,419 --> 00:03:33,822
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,824 --> 00:03:33,827
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,829 --> 00:03:38,145
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:38,148 --> 00:03:41,804
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,806 --> 00:03:56,818
39. delay(15)

153
00:03:56,820 --> 00:03:56,943
45. Vérification position sur la page d'accueil

154
00:03:56,946 --> 00:03:56,948
7. Identification : Portail Agent

155
00:03:56,950 --> 00:03:56,952
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,954 --> 00:03:57,022
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:57,023 --> 00:03:57,025
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:57,026 --> 00:04:00,037
5. delay(3)

159
00:04:00,039 --> 00:04:00,462
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,465 --> 00:04:03,470
15. delay(3)

161
00:04:03,472 --> 00:04:03,472
19. switch (PourQui)

162
00:04:03,473 --> 00:04:05,710
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,714 --> 00:04:05,715
6. break

164
00:04:05,716 --> 00:04:08,051
25. Je valide Mon choix

165
00:04:08,051 --> 00:04:08,130
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:08,130 --> 00:04:08,130
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:08,130 --> 00:04:18,138
5. delay(10)

168
00:04:18,140 --> 00:04:18,141
9. switch (TypeTitreDeSejour)

169
00:04:18,144 --> 00:04:18,144
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:18,146 --> 00:04:24,587
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

