1
00:00:00,001 --> 00:00:00,002
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,006 --> 00:00:00,094
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,095 --> 00:00:00,095
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,096 --> 00:00:00,097
9. DriverName = ""

5
00:00:00,097 --> 00:00:03,650
13. openBrowser("")

6
00:00:03,651 --> 00:00:03,651
17. driver = getWebDriver()

7
00:00:03,652 --> 00:00:03,653
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,654 --> 00:00:03,655
25. out.println(wrappedDriver.getClass())

9
00:00:03,655 --> 00:00:03,656
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,657 --> 00:00:03,657
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,658 --> 00:00:03,659
6. println("DriverName :" + DriverName)

12
00:00:03,660 --> 00:00:03,661
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,662 --> 00:00:03,662
33. DriverName = DriverName

14
00:00:03,663 --> 00:00:06,681
37. delay(medium_wait)

15
00:00:06,682 --> 00:00:06,682
41. executedBrowser = getExecutedBrowser()

16
00:00:06,682 --> 00:00:06,682
45. if (Profiles == "Usager")

17
00:00:06,682 --> 00:00:06,682
1. switch (DriverName)

18
00:00:06,682 --> 00:00:06,682
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,688 --> 00:00:09,150
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,152 --> 00:00:09,153
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,155 --> 00:00:09,172
14. maximizeWindow()

22
00:00:09,174 --> 00:00:09,174
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,175 --> 00:00:09,176
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,177 --> 00:00:09,251
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,252 --> 00:00:09,253
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,254 --> 00:00:09,254
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,256 --> 00:00:09,256
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,257 --> 00:00:09,414
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,414 --> 00:00:11,628
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,629 --> 00:00:14,038
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,040 --> 00:00:14,041
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,042 --> 00:00:17,055
27. delay(3)

33
00:00:17,057 --> 00:00:22,062
32. delay(5)

34
00:00:22,063 --> 00:00:22,208
38. Vérification de l'étape :

35
00:00:22,209 --> 00:00:22,210
42. break

36
00:00:22,210 --> 00:00:22,211
49. if (Profiles == "Agent")

37
00:00:22,212 --> 00:00:22,213
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,214 --> 00:00:22,288
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,289 --> 00:00:22,291
5. Call Highlight.on() automatically

40
00:00:22,293 --> 00:00:22,316
9. waitForPageLoad(5)

41
00:00:22,318 --> 00:00:24,834
15. Cliquer sur le lien Se Connecter :

42
00:00:24,836 --> 00:00:24,836
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,837 --> 00:00:24,927
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,929 --> 00:00:24,930
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,931 --> 00:00:24,931
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,931 --> 00:00:24,931
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,931 --> 00:00:25,109
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,111 --> 00:00:27,377
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,378 --> 00:00:29,752
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,754 --> 00:00:29,755
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,757 --> 00:00:32,775
27. delay(3)

52
00:00:32,776 --> 00:00:35,976
25. Première visiteq? Créez votre compte :

53
00:00:35,978 --> 00:00:36,472
29. waitForPageLoad(5)

54
00:00:36,475 --> 00:00:36,476
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,481 --> 00:00:41,046
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,048 --> 00:00:41,049
45.  Fournir La Date de début de validité :

57
00:00:41,050 --> 00:00:41,051
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,053 --> 00:00:41,055
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,056 --> 00:00:45,452
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,454 --> 00:00:47,917
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:47,919 --> 00:00:52,291
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,294 --> 00:00:52,295
71.  Fournir La Date de fin de validité :

63
00:00:52,295 --> 00:00:52,297
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,298 --> 00:00:52,299
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,300 --> 00:00:56,659
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,661 --> 00:00:59,211
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,213 --> 00:01:03,627
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,628 --> 00:01:05,915
97. Validation de la page pour la création du compte :

69
00:01:05,916 --> 00:01:05,991
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:05,992 --> 00:01:09,005
5.  Exit Action ou on passe à la création

71
00:01:09,007 --> 00:01:09,007
9. StopTestCase = false

72
00:01:09,009 --> 00:01:15,317
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,319 --> 00:01:15,321
17. if (MsgAlertPresent)

74
00:01:15,323 --> 00:01:15,324
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,327 --> 00:01:15,349
21. waitForPageLoad(2)

76
00:01:15,350 --> 00:01:15,350
111. Exit TestCase

77
00:01:15,352 --> 00:01:15,422
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,424 --> 00:01:18,426
5.  Exit Action ou on passe à la création

79
00:01:18,428 --> 00:01:18,428
9. StopTestCase = false

80
00:01:18,429 --> 00:01:21,739
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:21,741 --> 00:01:21,742
17. if (MsgAlertPresent)

82
00:01:21,744 --> 00:01:21,745
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:21,747 --> 00:01:21,767
21. waitForPageLoad(2)

84
00:01:21,769 --> 00:01:21,770
125. Exit TestCase

85
00:01:21,771 --> 00:01:21,771
131.  Création de Email utilisateur

86
00:01:21,773 --> 00:01:23,780
135. delay(2)

87
00:01:23,782 --> 00:01:28,457
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:28,458 --> 00:01:33,060
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,062 --> 00:01:35,343
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,345 --> 00:01:37,349
151. delay(2)

91
00:01:37,350 --> 00:01:39,714
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:39,719 --> 00:01:41,729
159. delay(2)

93
00:01:41,731 --> 00:01:41,765
165. Get all cookies after Event NetWork in Page

94
00:01:41,767 --> 00:01:41,767
171. Navigation à URL  Qualification et Création MDP

95
00:01:41,769 --> 00:01:41,769
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:41,771 --> 00:01:43,823
5. navigateToUrl(URL_CreationMDP)

97
00:01:43,827 --> 00:01:43,827
177. Navigation à URL Préprode  et Création MDP

98
00:01:43,829 --> 00:01:43,912
183. Vérification de la conformité du nouveau MDP

99
00:01:43,912 --> 00:01:43,922
3. waiting for the number of elements in the DOM to stop changing

100
00:01:43,924 --> 00:01:43,925
7. println("Créer un mot de passe sans majuscule")

101
00:01:43,928 --> 00:01:48,710
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:48,712 --> 00:01:53,314
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,315 --> 00:01:55,582
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:55,583 --> 00:01:55,728
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:55,728 --> 00:01:55,728
27. println("Créer un mot de passe sans minuscule")

106
00:01:55,735 --> 00:02:00,489
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:00,492 --> 00:02:05,214
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,216 --> 00:02:07,477
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:07,480 --> 00:02:07,621
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:07,624 --> 00:02:07,624
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:07,626 --> 00:02:12,312
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:12,314 --> 00:02:16,954
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:16,954 --> 00:02:19,241
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:19,243 --> 00:02:19,387
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:19,389 --> 00:02:19,389
67. println("Créer un mot de passe sans chiffre")

116
00:02:19,391 --> 00:02:24,064
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,066 --> 00:02:28,728
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:28,731 --> 00:02:30,991
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:30,993 --> 00:02:31,116
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,118 --> 00:02:31,119
87. println("Saisir 2 mots de passe différents")

121
00:02:31,123 --> 00:02:35,729
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:35,732 --> 00:02:40,390
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:40,393 --> 00:02:42,672
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:42,674 --> 00:02:42,812
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:42,812 --> 00:02:42,812
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:42,812 --> 00:02:47,539
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:47,540 --> 00:02:52,156
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,158 --> 00:02:54,426
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,428 --> 00:02:54,592
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:54,594 --> 00:02:59,206
189. Renseigner PDM Valide

131
00:02:59,209 --> 00:03:03,775
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:03,777 --> 00:03:06,043
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,045 --> 00:03:09,346
203. Retour à l'accueil

134
00:03:09,350 --> 00:03:09,386
207. waitForPageLoad(5)

135
00:03:09,386 --> 00:03:09,386
17. if (StopTestCase == false)

136
00:03:09,386 --> 00:03:09,470
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,472 --> 00:03:09,472
1. if (Profiles == "Usager")

138
00:03:09,474 --> 00:03:14,485
1. delay(5)

139
00:03:14,486 --> 00:03:17,086
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,088 --> 00:03:17,172
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,176 --> 00:03:17,179
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,181 --> 00:03:17,182
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,184 --> 00:03:17,184
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,185 --> 00:03:20,501
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:20,502 --> 00:03:20,503
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:20,504 --> 00:03:23,518
27. delay(3)

147
00:03:23,520 --> 00:03:28,534
17. delay(5)

148
00:03:28,537 --> 00:03:32,897
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:32,900 --> 00:03:32,901
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:32,904 --> 00:03:37,275
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,277 --> 00:03:40,952
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:40,955 --> 00:03:55,961
39. delay(15)

153
00:03:55,963 --> 00:03:56,085
45. Vérification position sur la page d'accueil

154
00:03:56,087 --> 00:03:56,088
7. Identification : Portail Agent

155
00:03:56,089 --> 00:03:56,091
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,092 --> 00:03:56,169
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,170 --> 00:03:56,171
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,173 --> 00:03:59,186
5. delay(3)

159
00:03:59,187 --> 00:03:59,622
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:03:59,624 --> 00:04:02,638
15. delay(3)

161
00:04:02,640 --> 00:04:02,641
19. switch (PourQui)

162
00:04:02,643 --> 00:04:04,884
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:04,886 --> 00:04:04,886
6. break

164
00:04:04,886 --> 00:04:07,242
25. Je valide Mon choix

165
00:04:07,246 --> 00:04:07,333
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,333 --> 00:04:07,337
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,337 --> 00:04:17,356
5. delay(10)

168
00:04:17,357 --> 00:04:17,358
9. switch (TypeTitreDeSejour)

169
00:04:17,360 --> 00:04:17,361
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,363 --> 00:04:23,830
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

