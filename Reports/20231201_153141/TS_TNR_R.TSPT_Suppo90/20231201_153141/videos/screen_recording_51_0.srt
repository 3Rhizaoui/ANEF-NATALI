1
00:00:00,002 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,108
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,109 --> 00:00:00,110
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,111 --> 00:00:00,111
9. DriverName = ""

5
00:00:00,112 --> 00:00:03,717
13. openBrowser("")

6
00:00:03,720 --> 00:00:03,721
17. driver = getWebDriver()

7
00:00:03,722 --> 00:00:03,723
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,725 --> 00:00:03,726
25. out.println(wrappedDriver.getClass())

9
00:00:03,730 --> 00:00:03,731
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,733 --> 00:00:03,735
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,738 --> 00:00:03,738
6. println("DriverName :" + DriverName)

12
00:00:03,740 --> 00:00:03,741
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,742 --> 00:00:03,743
33. DriverName = DriverName

14
00:00:03,744 --> 00:00:06,761
37. delay(medium_wait)

15
00:00:06,763 --> 00:00:06,763
41. executedBrowser = getExecutedBrowser()

16
00:00:06,763 --> 00:00:06,764
45. if (Profiles == "Usager")

17
00:00:06,764 --> 00:00:06,765
1. switch (DriverName)

18
00:00:06,766 --> 00:00:06,766
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,766 --> 00:00:09,233
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,235 --> 00:00:09,237
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,238 --> 00:00:09,263
14. maximizeWindow()

22
00:00:09,264 --> 00:00:09,265
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,266 --> 00:00:09,267
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,268 --> 00:00:09,353
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,354 --> 00:00:09,355
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,356 --> 00:00:09,357
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,358 --> 00:00:09,358
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,359 --> 00:00:09,507
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,509 --> 00:00:11,725
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,726 --> 00:00:14,125
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,128 --> 00:00:14,129
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,131 --> 00:00:17,145
27. delay(3)

33
00:00:17,147 --> 00:00:22,166
32. delay(5)

34
00:00:22,167 --> 00:00:22,312
38. Vérification de l'étape :

35
00:00:22,313 --> 00:00:22,313
42. break

36
00:00:22,320 --> 00:00:22,322
49. if (Profiles == "Agent")

37
00:00:22,323 --> 00:00:22,325
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,326 --> 00:00:22,412
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,414 --> 00:00:22,415
5. Call Highlight.on() automatically

40
00:00:22,417 --> 00:00:22,438
9. waitForPageLoad(5)

41
00:00:22,439 --> 00:00:24,983
15. Cliquer sur le lien Se Connecter :

42
00:00:24,984 --> 00:00:24,985
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,987 --> 00:00:25,065
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,065 --> 00:00:25,065
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,065 --> 00:00:25,065
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,065 --> 00:00:25,065
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,079 --> 00:00:25,233
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,234 --> 00:00:27,497
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,498 --> 00:00:29,872
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,878 --> 00:00:29,879
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,881 --> 00:00:32,894
27. delay(3)

52
00:00:32,895 --> 00:00:36,487
25. Première visiteq? Créez votre compte :

53
00:00:36,489 --> 00:00:37,118
29. waitForPageLoad(5)

54
00:00:37,120 --> 00:00:37,121
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:37,124 --> 00:00:41,717
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,718 --> 00:00:41,720
45.  Fournir La Date de début de validité :

57
00:00:41,721 --> 00:00:41,721
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,721 --> 00:00:41,721
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,721 --> 00:00:46,085
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:46,086 --> 00:00:48,522
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,522 --> 00:00:52,893
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,894 --> 00:00:52,895
71.  Fournir La Date de fin de validité :

63
00:00:52,896 --> 00:00:52,898
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,899 --> 00:00:52,899
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,900 --> 00:00:57,268
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:57,270 --> 00:00:59,832
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,834 --> 00:01:04,270
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:04,272 --> 00:01:06,603
97. Validation de la page pour la création du compte :

69
00:01:06,605 --> 00:01:06,679
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,685 --> 00:01:09,704
5.  Exit Action ou on passe à la création

71
00:01:09,704 --> 00:01:09,706
9. StopTestCase = false

72
00:01:09,707 --> 00:01:16,033
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:16,035 --> 00:01:16,035
17. if (MsgAlertPresent)

74
00:01:16,037 --> 00:01:16,038
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:16,039 --> 00:01:16,070
21. waitForPageLoad(2)

76
00:01:16,073 --> 00:01:16,075
111. Exit TestCase

77
00:01:16,076 --> 00:01:16,155
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:16,156 --> 00:01:19,162
5.  Exit Action ou on passe à la création

79
00:01:19,163 --> 00:01:19,164
9. StopTestCase = false

80
00:01:19,165 --> 00:01:22,523
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,525 --> 00:01:22,526
17. if (MsgAlertPresent)

82
00:01:22,529 --> 00:01:22,530
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,532 --> 00:01:22,556
21. waitForPageLoad(2)

84
00:01:22,557 --> 00:01:22,557
125. Exit TestCase

85
00:01:22,559 --> 00:01:22,559
131.  Création de Email utilisateur

86
00:01:22,560 --> 00:01:24,563
135. delay(2)

87
00:01:24,565 --> 00:01:29,242
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:29,244 --> 00:01:33,888
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,893 --> 00:01:36,202
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:36,204 --> 00:01:38,221
151. delay(2)

91
00:01:38,222 --> 00:01:40,596
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,598 --> 00:01:42,608
159. delay(2)

93
00:01:42,610 --> 00:01:42,627
165. Get all cookies after Event NetWork in Page

94
00:01:42,629 --> 00:01:42,629
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,630 --> 00:01:42,630
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,631 --> 00:01:44,696
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,699 --> 00:01:44,699
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,701 --> 00:01:44,785
183. Vérification de la conformité du nouveau MDP

99
00:01:44,787 --> 00:01:44,790
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,791 --> 00:01:44,799
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,803 --> 00:01:49,491
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,492 --> 00:01:54,124
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:54,126 --> 00:01:56,454
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,458 --> 00:01:56,655
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,655 --> 00:01:56,655
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,659 --> 00:02:01,381
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,384 --> 00:02:06,188
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:06,190 --> 00:02:08,531
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,534 --> 00:02:08,653
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,654 --> 00:02:08,655
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,657 --> 00:02:13,430
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,436 --> 00:02:18,127
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:18,129 --> 00:02:20,413
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:20,415 --> 00:02:20,552
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,554 --> 00:02:20,555
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,558 --> 00:02:25,313
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:25,317 --> 00:02:29,969
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,971 --> 00:02:32,214
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:32,216 --> 00:02:32,340
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:32,341 --> 00:02:32,341
87. println("Saisir 2 mots de passe différents")

121
00:02:32,343 --> 00:02:36,929
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,931 --> 00:02:41,621
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,623 --> 00:02:43,886
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,888 --> 00:02:44,034
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:44,034 --> 00:02:44,034
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:44,034 --> 00:02:48,595
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,596 --> 00:02:53,154
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:53,156 --> 00:02:55,393
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:55,395 --> 00:02:55,528
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,530 --> 00:03:00,145
189. Renseigner PDM Valide

131
00:03:00,147 --> 00:03:04,761
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,763 --> 00:03:07,049
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:07,050 --> 00:03:10,319
203. Retour à l'accueil

134
00:03:10,322 --> 00:03:10,359
207. waitForPageLoad(5)

135
00:03:10,362 --> 00:03:10,362
17. if (StopTestCase == false)

136
00:03:10,364 --> 00:03:10,452
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:10,454 --> 00:03:10,454
1. if (Profiles == "Usager")

138
00:03:10,457 --> 00:03:15,468
1. delay(5)

139
00:03:15,470 --> 00:03:18,140
7.  Cliquer sur le lien Se Connecter :

140
00:03:18,141 --> 00:03:18,220
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:18,229 --> 00:03:18,232
3. waiting for the number of elements in the DOM to stop changing

142
00:03:18,235 --> 00:03:18,235
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:18,236 --> 00:03:18,236
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:18,236 --> 00:03:21,547
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:21,548 --> 00:03:21,548
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:21,548 --> 00:03:24,559
27. delay(3)

147
00:03:24,561 --> 00:03:29,568
17. delay(5)

148
00:03:29,569 --> 00:03:33,916
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,918 --> 00:03:33,918
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,920 --> 00:03:38,240
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:38,242 --> 00:03:41,886
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,889 --> 00:03:56,907
39. delay(15)

153
00:03:56,909 --> 00:03:57,028
45. Vérification position sur la page d'accueil

154
00:03:57,030 --> 00:03:57,031
7. Identification : Portail Agent

155
00:03:57,033 --> 00:03:57,035
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:57,037 --> 00:03:57,125
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:57,127 --> 00:03:57,128
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:57,132 --> 00:04:00,142
5. delay(3)

159
00:04:00,144 --> 00:04:00,579
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,581 --> 00:04:03,595
15. delay(3)

161
00:04:03,595 --> 00:04:03,597
19. switch (PourQui)

162
00:04:03,599 --> 00:04:05,852
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,854 --> 00:04:05,856
6. break

164
00:04:05,857 --> 00:04:08,208
25. Je valide Mon choix

165
00:04:08,210 --> 00:04:08,304
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:08,306 --> 00:04:08,307
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:08,309 --> 00:04:18,316
5. delay(10)

168
00:04:18,319 --> 00:04:18,319
9. switch (TypeTitreDeSejour)

169
00:04:18,320 --> 00:04:18,321
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:18,322 --> 00:04:24,776
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

