1
00:00:00,002 --> 00:00:00,004
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,009 --> 00:00:00,101
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,103 --> 00:00:00,104
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,105 --> 00:00:00,106
9. DriverName = ""

5
00:00:00,109 --> 00:00:04,054
13. openBrowser("")

6
00:00:04,057 --> 00:00:04,059
17. driver = getWebDriver()

7
00:00:04,060 --> 00:00:04,060
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:04,062 --> 00:00:04,062
25. out.println(wrappedDriver.getClass())

9
00:00:04,063 --> 00:00:04,064
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:04,065 --> 00:00:04,065
2. DriverName = get("WebUI").get("browserType")

11
00:00:04,065 --> 00:00:04,067
6. println("DriverName :" + DriverName)

12
00:00:04,068 --> 00:00:04,069
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:04,070 --> 00:00:04,070
33. DriverName = DriverName

14
00:00:04,072 --> 00:00:07,080
37. delay(medium_wait)

15
00:00:07,080 --> 00:00:07,081
41. executedBrowser = getExecutedBrowser()

16
00:00:07,081 --> 00:00:07,081
45. if (Profiles == "Usager")

17
00:00:07,081 --> 00:00:07,081
1. switch (DriverName)

18
00:00:07,085 --> 00:00:07,085
4. Navigation à URL  Qualification et Création MDP

19
00:00:07,085 --> 00:00:09,559
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,561 --> 00:00:09,564
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,566 --> 00:00:09,587
14. maximizeWindow()

22
00:00:09,589 --> 00:00:09,589
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,591 --> 00:00:09,591
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,593 --> 00:00:09,665
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,666 --> 00:00:09,667
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,668 --> 00:00:09,668
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,669 --> 00:00:09,669
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,670 --> 00:00:09,846
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,847 --> 00:00:12,153
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:12,155 --> 00:00:14,645
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,646 --> 00:00:14,648
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,649 --> 00:00:17,670
27. delay(3)

33
00:00:17,671 --> 00:00:22,690
32. delay(5)

34
00:00:22,691 --> 00:00:22,828
38. Vérification de l'étape :

35
00:00:22,830 --> 00:00:22,831
42. break

36
00:00:22,832 --> 00:00:22,832
49. if (Profiles == "Agent")

37
00:00:22,833 --> 00:00:22,834
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,835 --> 00:00:22,911
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,912 --> 00:00:22,913
5. Call Highlight.on() automatically

40
00:00:22,915 --> 00:00:22,935
9. waitForPageLoad(5)

41
00:00:22,937 --> 00:00:25,525
15. Cliquer sur le lien Se Connecter :

42
00:00:25,527 --> 00:00:25,528
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:25,531 --> 00:00:25,617
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,618 --> 00:00:25,621
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,621 --> 00:00:25,621
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,621 --> 00:00:25,621
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,621 --> 00:00:25,782
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,784 --> 00:00:28,059
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:28,060 --> 00:00:30,435
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:30,437 --> 00:00:30,438
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:30,439 --> 00:00:33,456
27. delay(3)

52
00:00:33,456 --> 00:00:36,735
25. Première visiteq? Créez votre compte :

53
00:00:36,737 --> 00:00:37,239
29. waitForPageLoad(5)

54
00:00:37,244 --> 00:00:37,244
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:37,245 --> 00:00:41,794
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,796 --> 00:00:41,796
45.  Fournir La Date de début de validité :

57
00:00:41,796 --> 00:00:41,798
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,798 --> 00:00:41,800
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,801 --> 00:00:46,133
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:46,135 --> 00:00:48,517
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,518 --> 00:00:52,856
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,858 --> 00:00:52,859
71.  Fournir La Date de fin de validité :

63
00:00:52,859 --> 00:00:52,861
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,861 --> 00:00:52,863
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,864 --> 00:00:57,222
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:57,223 --> 00:00:59,797
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,799 --> 00:01:04,185
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:04,187 --> 00:01:06,463
97. Validation de la page pour la création du compte :

69
00:01:06,466 --> 00:01:06,539
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,539 --> 00:01:09,550
5.  Exit Action ou on passe à la création

71
00:01:09,551 --> 00:01:09,551
9. StopTestCase = false

72
00:01:09,552 --> 00:01:15,881
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,883 --> 00:01:15,884
17. if (MsgAlertPresent)

74
00:01:15,885 --> 00:01:15,886
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,888 --> 00:01:15,916
21. waitForPageLoad(2)

76
00:01:15,917 --> 00:01:15,919
111. Exit TestCase

77
00:01:15,919 --> 00:01:16,003
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:16,005 --> 00:01:19,018
5.  Exit Action ou on passe à la création

79
00:01:19,019 --> 00:01:19,020
9. StopTestCase = false

80
00:01:19,022 --> 00:01:22,316
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,318 --> 00:01:22,319
17. if (MsgAlertPresent)

82
00:01:22,322 --> 00:01:22,324
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,325 --> 00:01:22,355
21. waitForPageLoad(2)

84
00:01:22,357 --> 00:01:22,357
125. Exit TestCase

85
00:01:22,358 --> 00:01:22,359
131.  Création de Email utilisateur

86
00:01:22,360 --> 00:01:24,374
135. delay(2)

87
00:01:24,376 --> 00:01:29,027
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:29,028 --> 00:01:33,665
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,666 --> 00:01:35,955
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,958 --> 00:01:37,966
151. delay(2)

91
00:01:37,967 --> 00:01:40,389
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,391 --> 00:01:42,403
159. delay(2)

93
00:01:42,405 --> 00:01:42,439
165. Get all cookies after Event NetWork in Page

94
00:01:42,441 --> 00:01:42,442
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,443 --> 00:01:42,443
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,445 --> 00:01:44,514
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,516 --> 00:01:44,517
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,519 --> 00:01:44,602
183. Vérification de la conformité du nouveau MDP

99
00:01:44,604 --> 00:01:44,605
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,607 --> 00:01:44,608
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,609 --> 00:01:49,449
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,451 --> 00:01:54,116
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:54,118 --> 00:01:56,425
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,427 --> 00:01:56,538
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,538 --> 00:01:56,538
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,549 --> 00:02:01,248
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,251 --> 00:02:05,961
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,963 --> 00:02:08,236
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,238 --> 00:02:08,391
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,393 --> 00:02:08,393
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,395 --> 00:02:13,057
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,060 --> 00:02:17,698
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,700 --> 00:02:19,944
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:19,945 --> 00:02:20,069
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,070 --> 00:02:20,071
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,072 --> 00:02:24,727
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,730 --> 00:02:29,364
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,367 --> 00:02:31,624
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,626 --> 00:02:31,739
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,741 --> 00:02:31,741
87. println("Saisir 2 mots de passe différents")

121
00:02:31,742 --> 00:02:36,294
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,295 --> 00:02:40,946
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:40,948 --> 00:02:43,268
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,269 --> 00:02:43,436
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,438 --> 00:02:43,438
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,440 --> 00:02:47,996
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:47,999 --> 00:02:52,602
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,605 --> 00:02:54,939
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,942 --> 00:02:55,059
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,063 --> 00:02:59,695
189. Renseigner PDM Valide

131
00:02:59,698 --> 00:03:04,223
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,225 --> 00:03:06,528
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,529 --> 00:03:09,844
203. Retour à l'accueil

134
00:03:09,846 --> 00:03:09,898
207. waitForPageLoad(5)

135
00:03:09,901 --> 00:03:09,902
17. if (StopTestCase == false)

136
00:03:09,903 --> 00:03:09,978
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,980 --> 00:03:09,981
1. if (Profiles == "Usager")

138
00:03:09,984 --> 00:03:15,000
1. delay(5)

139
00:03:15,002 --> 00:03:17,616
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,617 --> 00:03:17,692
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,693 --> 00:03:17,694
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,696 --> 00:03:17,696
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,698 --> 00:03:17,699
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,701 --> 00:03:21,016
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:21,018 --> 00:03:21,018
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:21,018 --> 00:03:24,025
27. delay(3)

147
00:03:24,025 --> 00:03:29,032
17. delay(5)

148
00:03:29,034 --> 00:03:33,417
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,419 --> 00:03:33,421
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,424 --> 00:03:37,768
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,771 --> 00:03:41,369
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,371 --> 00:03:56,376
39. delay(15)

153
00:03:56,377 --> 00:03:56,495
45. Vérification position sur la page d'accueil

154
00:03:56,498 --> 00:03:56,498
7. Identification : Portail Agent

155
00:03:56,500 --> 00:03:56,501
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,503 --> 00:03:56,577
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,579 --> 00:03:56,581
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,582 --> 00:03:59,598
5. delay(3)

159
00:03:59,600 --> 00:04:00,042
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,043 --> 00:04:03,060
15. delay(3)

161
00:04:03,063 --> 00:04:03,064
19. switch (PourQui)

162
00:04:03,066 --> 00:04:05,305
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,309 --> 00:04:05,310
6. break

164
00:04:05,311 --> 00:04:07,680
25. Je valide Mon choix

165
00:04:07,683 --> 00:04:07,795
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,797 --> 00:04:07,799
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,802 --> 00:04:17,813
5. delay(10)

168
00:04:17,814 --> 00:04:17,814
9. switch (TypeTitreDeSejour)

169
00:04:17,817 --> 00:04:17,817
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,819 --> 00:04:24,250
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

