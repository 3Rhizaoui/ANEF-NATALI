1
00:00:00,002 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,081
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,082 --> 00:00:00,082
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,084 --> 00:00:00,085
9. DriverName = ""

5
00:00:00,085 --> 00:00:03,847
13. openBrowser("")

6
00:00:03,848 --> 00:00:03,849
17. driver = getWebDriver()

7
00:00:03,850 --> 00:00:03,852
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,856 --> 00:00:03,856
25. out.println(wrappedDriver.getClass())

9
00:00:03,858 --> 00:00:03,858
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,859 --> 00:00:03,860
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,861 --> 00:00:03,862
6. println("DriverName :" + DriverName)

12
00:00:03,863 --> 00:00:03,863
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,864 --> 00:00:03,865
33. DriverName = DriverName

14
00:00:03,866 --> 00:00:06,876
37. delay(medium_wait)

15
00:00:06,876 --> 00:00:06,876
41. executedBrowser = getExecutedBrowser()

16
00:00:06,877 --> 00:00:06,877
45. if (Profiles == "Usager")

17
00:00:06,878 --> 00:00:06,878
1. switch (DriverName)

18
00:00:06,879 --> 00:00:06,879
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,880 --> 00:00:09,364
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,368 --> 00:00:09,370
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,372 --> 00:00:09,389
14. maximizeWindow()

22
00:00:09,391 --> 00:00:09,391
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,393 --> 00:00:09,394
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,396 --> 00:00:09,478
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,479 --> 00:00:09,480
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,481 --> 00:00:09,482
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,483 --> 00:00:09,483
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,485 --> 00:00:09,645
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,646 --> 00:00:11,910
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,911 --> 00:00:14,303
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,304 --> 00:00:14,305
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,306 --> 00:00:17,316
27. delay(3)

33
00:00:17,318 --> 00:00:22,321
32. delay(5)

34
00:00:22,321 --> 00:00:22,469
38. Vérification de l'étape :

35
00:00:22,471 --> 00:00:22,471
42. break

36
00:00:22,472 --> 00:00:22,473
49. if (Profiles == "Agent")

37
00:00:22,475 --> 00:00:22,479
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,481 --> 00:00:22,565
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,567 --> 00:00:22,568
5. Call Highlight.on() automatically

40
00:00:22,570 --> 00:00:22,589
9. waitForPageLoad(5)

41
00:00:22,591 --> 00:00:25,121
15. Cliquer sur le lien Se Connecter :

42
00:00:25,122 --> 00:00:25,127
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:25,128 --> 00:00:25,203
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,204 --> 00:00:25,206
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,207 --> 00:00:25,208
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,209 --> 00:00:25,210
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,211 --> 00:00:25,351
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,353 --> 00:00:27,602
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,604 --> 00:00:30,290
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:30,292 --> 00:00:30,293
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:30,295 --> 00:00:33,305
27. delay(3)

52
00:00:33,307 --> 00:00:36,689
25. Première visiteq? Créez votre compte :

53
00:00:36,691 --> 00:00:37,232
29. waitForPageLoad(5)

54
00:00:37,236 --> 00:00:37,237
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:37,238 --> 00:00:41,852
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,853 --> 00:00:41,854
45.  Fournir La Date de début de validité :

57
00:00:41,856 --> 00:00:41,859
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,860 --> 00:00:41,860
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,861 --> 00:00:46,198
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:46,200 --> 00:00:48,566
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,568 --> 00:00:52,948
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,951 --> 00:00:52,952
71.  Fournir La Date de fin de validité :

63
00:00:52,954 --> 00:00:52,954
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,955 --> 00:00:52,955
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,957 --> 00:00:57,301
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:57,302 --> 00:00:59,844
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,847 --> 00:01:04,219
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:04,220 --> 00:01:06,485
97. Validation de la page pour la création du compte :

69
00:01:06,488 --> 00:01:06,574
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,575 --> 00:01:09,586
5.  Exit Action ou on passe à la création

71
00:01:09,590 --> 00:01:09,591
9. StopTestCase = false

72
00:01:09,593 --> 00:01:15,911
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,913 --> 00:01:15,914
17. if (MsgAlertPresent)

74
00:01:15,915 --> 00:01:15,916
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,918 --> 00:01:15,941
21. waitForPageLoad(2)

76
00:01:15,942 --> 00:01:15,943
111. Exit TestCase

77
00:01:15,945 --> 00:01:16,025
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:16,026 --> 00:01:19,034
5.  Exit Action ou on passe à la création

79
00:01:19,036 --> 00:01:19,037
9. StopTestCase = false

80
00:01:19,038 --> 00:01:22,298
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,300 --> 00:01:22,301
17. if (MsgAlertPresent)

82
00:01:22,302 --> 00:01:22,303
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,304 --> 00:01:22,326
21. waitForPageLoad(2)

84
00:01:22,328 --> 00:01:22,328
125. Exit TestCase

85
00:01:22,329 --> 00:01:22,329
131.  Création de Email utilisateur

86
00:01:22,331 --> 00:01:24,342
135. delay(2)

87
00:01:24,344 --> 00:01:28,999
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:29,001 --> 00:01:33,783
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,784 --> 00:01:36,070
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:36,072 --> 00:01:38,090
151. delay(2)

91
00:01:38,091 --> 00:01:40,504
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,505 --> 00:01:42,519
159. delay(2)

93
00:01:42,520 --> 00:01:42,552
165. Get all cookies after Event NetWork in Page

94
00:01:42,554 --> 00:01:42,554
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,555 --> 00:01:42,555
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,556 --> 00:01:44,614
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,616 --> 00:01:44,617
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,619 --> 00:01:44,700
183. Vérification de la conformité du nouveau MDP

99
00:01:44,703 --> 00:01:44,704
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,708 --> 00:01:44,710
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,712 --> 00:01:49,429
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,430 --> 00:01:54,048
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:54,049 --> 00:01:56,321
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,323 --> 00:01:56,469
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,469 --> 00:01:56,469
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,474 --> 00:02:01,211
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,215 --> 00:02:06,072
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:06,074 --> 00:02:08,422
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,425 --> 00:02:08,595
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,597 --> 00:02:08,598
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,600 --> 00:02:13,267
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,270 --> 00:02:17,898
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,900 --> 00:02:20,177
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:20,179 --> 00:02:20,295
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,296 --> 00:02:20,297
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,299 --> 00:02:24,939
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,940 --> 00:02:29,554
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,556 --> 00:02:31,806
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,808 --> 00:02:31,925
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,927 --> 00:02:31,928
87. println("Saisir 2 mots de passe différents")

121
00:02:31,930 --> 00:02:36,606
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,609 --> 00:02:41,269
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,272 --> 00:02:43,543
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,544 --> 00:02:43,706
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,708 --> 00:02:43,709
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,709 --> 00:02:48,286
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,288 --> 00:02:52,866
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,868 --> 00:02:55,122
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:55,127 --> 00:02:55,254
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,256 --> 00:02:59,815
189. Renseigner PDM Valide

131
00:02:59,817 --> 00:03:04,378
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,381 --> 00:03:06,666
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,668 --> 00:03:09,805
203. Retour à l'accueil

134
00:03:09,809 --> 00:03:09,843
207. waitForPageLoad(5)

135
00:03:09,846 --> 00:03:09,847
17. if (StopTestCase == false)

136
00:03:09,848 --> 00:03:09,923
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,926 --> 00:03:09,926
1. if (Profiles == "Usager")

138
00:03:09,928 --> 00:03:14,935
1. delay(5)

139
00:03:14,937 --> 00:03:17,583
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,585 --> 00:03:17,674
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,677 --> 00:03:17,680
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,683 --> 00:03:17,684
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,686 --> 00:03:17,688
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,690 --> 00:03:20,969
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:20,971 --> 00:03:20,971
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:20,971 --> 00:03:23,981
27. delay(3)

147
00:03:23,983 --> 00:03:28,989
17. delay(5)

148
00:03:28,991 --> 00:03:33,320
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,323 --> 00:03:33,323
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,326 --> 00:03:37,647
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,650 --> 00:03:41,523
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,527 --> 00:03:56,545
39. delay(15)

153
00:03:56,546 --> 00:03:56,660
45. Vérification position sur la page d'accueil

154
00:03:56,663 --> 00:03:56,664
7. Identification : Portail Agent

155
00:03:56,666 --> 00:03:56,669
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,672 --> 00:03:56,744
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,747 --> 00:03:56,748
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,750 --> 00:03:59,768
5. delay(3)

159
00:03:59,769 --> 00:04:00,225
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,228 --> 00:04:03,244
15. delay(3)

161
00:04:03,246 --> 00:04:03,247
19. switch (PourQui)

162
00:04:03,250 --> 00:04:05,479
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,482 --> 00:04:05,483
6. break

164
00:04:05,485 --> 00:04:07,840
25. Je valide Mon choix

165
00:04:07,844 --> 00:04:07,930
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,934 --> 00:04:07,936
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,939 --> 00:04:17,953
5. delay(10)

168
00:04:17,957 --> 00:04:17,959
9. switch (TypeTitreDeSejour)

169
00:04:17,960 --> 00:04:17,961
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,963 --> 00:04:25,852
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

