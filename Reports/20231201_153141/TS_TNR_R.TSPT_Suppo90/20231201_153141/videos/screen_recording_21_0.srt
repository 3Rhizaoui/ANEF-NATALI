1
00:00:00,002 --> 00:00:00,004
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,010 --> 00:00:00,090
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,091 --> 00:00:00,094
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,096 --> 00:00:00,096
9. DriverName = ""

5
00:00:00,097 --> 00:00:03,260
13. openBrowser("")

6
00:00:03,264 --> 00:00:03,266
17. driver = getWebDriver()

7
00:00:03,267 --> 00:00:03,267
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,270 --> 00:00:03,271
25. out.println(wrappedDriver.getClass())

9
00:00:03,272 --> 00:00:03,273
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,275 --> 00:00:03,276
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,277 --> 00:00:03,278
6. println("DriverName :" + DriverName)

12
00:00:03,279 --> 00:00:03,279
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,280 --> 00:00:03,281
33. DriverName = DriverName

14
00:00:03,281 --> 00:00:06,289
37. delay(medium_wait)

15
00:00:06,291 --> 00:00:06,293
41. executedBrowser = getExecutedBrowser()

16
00:00:06,294 --> 00:00:06,294
45. if (Profiles == "Usager")

17
00:00:06,295 --> 00:00:06,296
1. switch (DriverName)

18
00:00:06,297 --> 00:00:06,298
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,298 --> 00:00:08,773
1. navigateToUrl(URL_ANEFQualif)

20
00:00:08,775 --> 00:00:08,778
10. Navigation à URL Préprode  et Création MDP

21
00:00:08,779 --> 00:00:08,793
14. maximizeWindow()

22
00:00:08,795 --> 00:00:08,795
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:08,797 --> 00:00:08,798
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:08,799 --> 00:00:08,883
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:08,884 --> 00:00:08,885
3. waiting for the number of elements in the DOM to stop changing

26
00:00:08,887 --> 00:00:08,888
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:08,889 --> 00:00:08,889
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:08,891 --> 00:00:09,060
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,061 --> 00:00:11,290
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,291 --> 00:00:13,712
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,714 --> 00:00:13,715
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,716 --> 00:00:16,729
27. delay(3)

33
00:00:16,730 --> 00:00:21,736
32. delay(5)

34
00:00:21,737 --> 00:00:21,881
38. Vérification de l'étape :

35
00:00:21,882 --> 00:00:21,883
42. break

36
00:00:21,886 --> 00:00:21,888
49. if (Profiles == "Agent")

37
00:00:21,889 --> 00:00:21,890
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:21,892 --> 00:00:21,981
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:21,981 --> 00:00:21,984
5. Call Highlight.on() automatically

40
00:00:21,986 --> 00:00:22,008
9. waitForPageLoad(5)

41
00:00:22,011 --> 00:00:24,657
15. Cliquer sur le lien Se Connecter :

42
00:00:24,659 --> 00:00:24,661
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,663 --> 00:00:24,753
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,756 --> 00:00:24,757
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,757 --> 00:00:24,759
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,759 --> 00:00:24,759
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,759 --> 00:00:24,898
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:24,899 --> 00:00:27,140
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,142 --> 00:00:29,625
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,627 --> 00:00:29,628
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,629 --> 00:00:32,632
27. delay(3)

52
00:00:32,634 --> 00:00:36,307
25. Première visiteq? Créez votre compte :

53
00:00:36,308 --> 00:00:36,558
29. waitForPageLoad(5)

54
00:00:36,560 --> 00:00:36,561
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,563 --> 00:00:41,323
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,326 --> 00:00:41,326
45.  Fournir La Date de début de validité :

57
00:00:41,327 --> 00:00:41,329
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,331 --> 00:00:41,332
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,333 --> 00:00:45,653
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,655 --> 00:00:48,021
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,023 --> 00:00:52,365
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,368 --> 00:00:52,368
71.  Fournir La Date de fin de validité :

63
00:00:52,370 --> 00:00:52,371
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,372 --> 00:00:52,373
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,375 --> 00:00:56,730
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,733 --> 00:00:59,297
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,298 --> 00:01:03,698
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,699 --> 00:01:05,997
97. Validation de la page pour la création du compte :

69
00:01:05,999 --> 00:01:06,079
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,080 --> 00:01:09,087
5.  Exit Action ou on passe à la création

71
00:01:09,088 --> 00:01:09,089
9. StopTestCase = false

72
00:01:09,090 --> 00:01:09,219
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:09,220 --> 00:01:09,220
17. if (MsgAlertPresent)

74
00:01:09,222 --> 00:01:09,376
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

75
00:01:09,377 --> 00:01:09,377
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

76
00:01:09,379 --> 00:01:09,379
9. MsgStopTestCase = TextAlert

77
00:01:09,380 --> 00:01:09,382
13. return null

78
00:01:09,383 --> 00:01:09,383
111. Exit TestCase

79
00:01:09,385 --> 00:01:09,387
1. return null

80
00:01:09,388 --> 00:01:09,389
17. if (StopTestCase == false)

