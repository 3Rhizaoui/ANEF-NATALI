1
00:00:00,001 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,097
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,098 --> 00:00:00,099
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,102 --> 00:00:00,103
9. DriverName = ""

5
00:00:00,104 --> 00:00:03,363
13. openBrowser("")

6
00:00:03,364 --> 00:00:03,365
17. driver = getWebDriver()

7
00:00:03,365 --> 00:00:03,365
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,365 --> 00:00:03,365
25. out.println(wrappedDriver.getClass())

9
00:00:03,365 --> 00:00:03,370
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,372 --> 00:00:03,373
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,374 --> 00:00:03,375
6. println("DriverName :" + DriverName)

12
00:00:03,376 --> 00:00:03,377
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,379 --> 00:00:03,380
33. DriverName = DriverName

14
00:00:03,381 --> 00:00:06,398
37. delay(medium_wait)

15
00:00:06,398 --> 00:00:06,399
41. executedBrowser = getExecutedBrowser()

16
00:00:06,399 --> 00:00:06,399
45. if (Profiles == "Usager")

17
00:00:06,399 --> 00:00:06,402
1. switch (DriverName)

18
00:00:06,402 --> 00:00:06,402
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,403 --> 00:00:08,873
1. navigateToUrl(URL_ANEFQualif)

20
00:00:08,876 --> 00:00:08,878
10. Navigation à URL Préprode  et Création MDP

21
00:00:08,879 --> 00:00:08,909
14. maximizeWindow()

22
00:00:08,910 --> 00:00:08,910
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:08,912 --> 00:00:08,912
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:08,914 --> 00:00:08,996
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:08,996 --> 00:00:08,996
3. waiting for the number of elements in the DOM to stop changing

26
00:00:08,996 --> 00:00:08,996
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:08,996 --> 00:00:08,996
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:08,996 --> 00:00:09,156
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,158 --> 00:00:11,433
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,434 --> 00:00:13,852
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,854 --> 00:00:13,855
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,857 --> 00:00:16,870
27. delay(3)

33
00:00:16,872 --> 00:00:21,882
32. delay(5)

34
00:00:21,885 --> 00:00:22,055
38. Vérification de l'étape :

35
00:00:22,057 --> 00:00:22,058
42. break

36
00:00:22,059 --> 00:00:22,061
49. if (Profiles == "Agent")

37
00:00:22,062 --> 00:00:22,064
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,065 --> 00:00:22,143
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,145 --> 00:00:22,146
5. Call Highlight.on() automatically

40
00:00:22,148 --> 00:00:22,179
9. waitForPageLoad(5)

41
00:00:22,181 --> 00:00:24,725
15. Cliquer sur le lien Se Connecter :

42
00:00:24,728 --> 00:00:24,729
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,730 --> 00:00:24,804
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,805 --> 00:00:24,806
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,807 --> 00:00:24,808
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,810 --> 00:00:24,811
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,813 --> 00:00:24,961
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:24,961 --> 00:00:27,214
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,216 --> 00:00:29,728
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,730 --> 00:00:29,735
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,738 --> 00:00:32,758
27. delay(3)

52
00:00:32,758 --> 00:00:36,135
25. Première visiteq? Créez votre compte :

53
00:00:36,137 --> 00:00:36,683
29. waitForPageLoad(5)

54
00:00:36,685 --> 00:00:36,686
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,687 --> 00:00:41,252
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,253 --> 00:00:41,254
45.  Fournir La Date de début de validité :

57
00:00:41,255 --> 00:00:41,256
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,259 --> 00:00:41,260
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,262 --> 00:00:45,645
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,647 --> 00:00:48,031
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,032 --> 00:00:52,390
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,392 --> 00:00:52,392
71.  Fournir La Date de fin de validité :

63
00:00:52,395 --> 00:00:52,396
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,396 --> 00:00:52,396
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,397 --> 00:00:56,754
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,755 --> 00:00:59,321
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,323 --> 00:01:03,675
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,678 --> 00:01:05,931
97. Validation de la page pour la création du compte :

69
00:01:05,933 --> 00:01:06,003
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,003 --> 00:01:09,010
5.  Exit Action ou on passe à la création

71
00:01:09,011 --> 00:01:09,012
9. StopTestCase = false

72
00:01:09,014 --> 00:01:09,156
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:09,159 --> 00:01:09,159
17. if (MsgAlertPresent)

74
00:01:09,160 --> 00:01:09,301
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

75
00:01:09,302 --> 00:01:09,303
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

76
00:01:09,304 --> 00:01:09,305
9. MsgStopTestCase = TextAlert

77
00:01:09,306 --> 00:01:09,308
13. return null

78
00:01:09,309 --> 00:01:09,310
111. Exit TestCase

79
00:01:09,312 --> 00:01:09,313
1. return null

80
00:01:09,314 --> 00:01:09,315
17. if (StopTestCase == false)

