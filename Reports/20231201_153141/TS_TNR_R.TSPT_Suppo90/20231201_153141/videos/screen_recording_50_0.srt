1
00:00:00,002 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,008 --> 00:00:00,102
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,103 --> 00:00:00,104
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,106 --> 00:00:00,107
9. DriverName = ""

5
00:00:00,110 --> 00:00:03,516
13. openBrowser("")

6
00:00:03,518 --> 00:00:03,518
17. driver = getWebDriver()

7
00:00:03,519 --> 00:00:03,520
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,523 --> 00:00:03,524
25. out.println(wrappedDriver.getClass())

9
00:00:03,524 --> 00:00:03,525
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,527 --> 00:00:03,528
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,529 --> 00:00:03,529
6. println("DriverName :" + DriverName)

12
00:00:03,530 --> 00:00:03,531
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,533 --> 00:00:03,535
33. DriverName = DriverName

14
00:00:03,535 --> 00:00:06,540
37. delay(medium_wait)

15
00:00:06,542 --> 00:00:06,542
41. executedBrowser = getExecutedBrowser()

16
00:00:06,542 --> 00:00:06,543
45. if (Profiles == "Usager")

17
00:00:06,543 --> 00:00:06,544
1. switch (DriverName)

18
00:00:06,544 --> 00:00:06,544
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,546 --> 00:00:09,050
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,051 --> 00:00:09,053
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,054 --> 00:00:09,073
14. maximizeWindow()

22
00:00:09,075 --> 00:00:09,076
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,077 --> 00:00:09,077
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,078 --> 00:00:09,160
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,161 --> 00:00:09,162
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,165 --> 00:00:09,166
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,167 --> 00:00:09,168
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,169 --> 00:00:09,316
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,318 --> 00:00:11,583
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,585 --> 00:00:13,979
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,980 --> 00:00:13,981
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,983 --> 00:00:17,000
27. delay(3)

33
00:00:17,002 --> 00:00:22,009
32. delay(5)

34
00:00:22,009 --> 00:00:22,178
38. Vérification de l'étape :

35
00:00:22,180 --> 00:00:22,181
42. break

36
00:00:22,182 --> 00:00:22,183
49. if (Profiles == "Agent")

37
00:00:22,184 --> 00:00:22,186
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,187 --> 00:00:22,260
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,261 --> 00:00:22,262
5. Call Highlight.on() automatically

40
00:00:22,264 --> 00:00:22,286
9. waitForPageLoad(5)

41
00:00:22,288 --> 00:00:24,919
15. Cliquer sur le lien Se Connecter :

42
00:00:24,921 --> 00:00:24,922
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,924 --> 00:00:25,012
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,014 --> 00:00:25,015
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,017 --> 00:00:25,017
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,019 --> 00:00:25,020
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,021 --> 00:00:25,200
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,201 --> 00:00:27,458
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,461 --> 00:00:29,900
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,902 --> 00:00:29,903
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,904 --> 00:00:32,913
27. delay(3)

52
00:00:32,914 --> 00:00:36,239
25. Première visiteq? Créez votre compte :

53
00:00:36,240 --> 00:00:36,792
29. waitForPageLoad(5)

54
00:00:36,798 --> 00:00:36,799
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,801 --> 00:00:41,435
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,437 --> 00:00:41,438
45.  Fournir La Date de début de validité :

57
00:00:41,440 --> 00:00:41,444
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,445 --> 00:00:41,447
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,448 --> 00:00:45,801
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,802 --> 00:00:48,161
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,164 --> 00:00:52,509
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,511 --> 00:00:52,512
71.  Fournir La Date de fin de validité :

63
00:00:52,514 --> 00:00:52,514
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,515 --> 00:00:52,516
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,517 --> 00:00:56,852
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,853 --> 00:00:59,399
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,400 --> 00:01:03,775
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,777 --> 00:01:06,053
97. Validation de la page pour la création du compte :

69
00:01:06,055 --> 00:01:06,126
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,127 --> 00:01:09,134
5.  Exit Action ou on passe à la création

71
00:01:09,136 --> 00:01:09,137
9. StopTestCase = false

72
00:01:09,138 --> 00:01:15,475
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,477 --> 00:01:15,477
17. if (MsgAlertPresent)

74
00:01:15,479 --> 00:01:15,479
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,481 --> 00:01:15,504
21. waitForPageLoad(2)

76
00:01:15,507 --> 00:01:15,507
111. Exit TestCase

77
00:01:15,509 --> 00:01:15,590
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,591 --> 00:01:18,594
5.  Exit Action ou on passe à la création

79
00:01:18,595 --> 00:01:18,596
9. StopTestCase = false

80
00:01:18,596 --> 00:01:21,903
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:21,906 --> 00:01:21,906
17. if (MsgAlertPresent)

82
00:01:21,908 --> 00:01:21,909
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:21,910 --> 00:01:21,944
21. waitForPageLoad(2)

84
00:01:21,945 --> 00:01:21,946
125. Exit TestCase

85
00:01:21,948 --> 00:01:21,948
131.  Création de Email utilisateur

86
00:01:21,949 --> 00:01:23,960
135. delay(2)

87
00:01:23,961 --> 00:01:28,767
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:28,770 --> 00:01:33,473
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,474 --> 00:01:35,754
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,756 --> 00:01:37,771
151. delay(2)

91
00:01:37,773 --> 00:01:40,193
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,194 --> 00:01:42,217
159. delay(2)

93
00:01:42,219 --> 00:01:42,255
165. Get all cookies after Event NetWork in Page

94
00:01:42,257 --> 00:01:42,258
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,259 --> 00:01:42,260
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,261 --> 00:01:44,333
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,336 --> 00:01:44,336
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,338 --> 00:01:44,412
183. Vérification de la conformité du nouveau MDP

99
00:01:44,414 --> 00:01:44,416
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,420 --> 00:01:44,421
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,423 --> 00:01:49,195
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,197 --> 00:01:53,815
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,817 --> 00:01:56,088
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,090 --> 00:01:56,236
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,238 --> 00:01:56,238
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,240 --> 00:02:00,987
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:00,989 --> 00:02:05,702
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,705 --> 00:02:07,982
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:07,984 --> 00:02:08,122
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,125 --> 00:02:08,125
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,127 --> 00:02:12,859
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:12,863 --> 00:02:17,490
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,493 --> 00:02:19,745
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:19,748 --> 00:02:19,892
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:19,894 --> 00:02:19,895
67. println("Créer un mot de passe sans chiffre")

116
00:02:19,897 --> 00:02:24,566
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,568 --> 00:02:29,268
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,269 --> 00:02:31,511
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,514 --> 00:02:31,624
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,626 --> 00:02:31,626
87. println("Saisir 2 mots de passe différents")

121
00:02:31,628 --> 00:02:36,233
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,234 --> 00:02:40,913
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:40,915 --> 00:02:43,198
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,198 --> 00:02:43,312
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,315 --> 00:02:43,315
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,315 --> 00:02:47,918
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:47,921 --> 00:02:52,475
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,476 --> 00:02:54,710
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,712 --> 00:02:54,882
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:54,882 --> 00:02:59,493
189. Renseigner PDM Valide

131
00:02:59,496 --> 00:03:04,031
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,032 --> 00:03:06,329
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,331 --> 00:03:09,545
203. Retour à l'accueil

134
00:03:09,548 --> 00:03:09,588
207. waitForPageLoad(5)

135
00:03:09,589 --> 00:03:09,590
17. if (StopTestCase == false)

136
00:03:09,591 --> 00:03:09,664
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,666 --> 00:03:09,666
1. if (Profiles == "Usager")

138
00:03:09,667 --> 00:03:14,675
1. delay(5)

139
00:03:14,677 --> 00:03:17,291
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,294 --> 00:03:17,371
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,371 --> 00:03:17,378
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,381 --> 00:03:17,382
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,384 --> 00:03:17,384
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,384 --> 00:03:20,695
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:20,696 --> 00:03:20,698
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:20,700 --> 00:03:23,709
27. delay(3)

147
00:03:23,711 --> 00:03:28,715
17. delay(5)

148
00:03:28,718 --> 00:03:33,081
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,084 --> 00:03:33,084
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,087 --> 00:03:37,365
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,367 --> 00:03:41,090
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,091 --> 00:03:56,099
39. delay(15)

153
00:03:56,101 --> 00:03:56,214
45. Vérification position sur la page d'accueil

154
00:03:56,215 --> 00:03:56,217
7. Identification : Portail Agent

155
00:03:56,218 --> 00:03:56,219
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,220 --> 00:03:56,286
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,287 --> 00:03:56,288
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,290 --> 00:03:59,300
5. delay(3)

159
00:03:59,301 --> 00:03:59,739
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:03:59,741 --> 00:04:02,755
15. delay(3)

161
00:04:02,757 --> 00:04:02,758
19. switch (PourQui)

162
00:04:02,759 --> 00:04:04,995
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:04,998 --> 00:04:04,999
6. break

164
00:04:05,000 --> 00:04:07,344
25. Je valide Mon choix

165
00:04:07,346 --> 00:04:07,435
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,437 --> 00:04:07,438
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,440 --> 00:04:17,458
5. delay(10)

168
00:04:17,459 --> 00:04:17,460
9. switch (TypeTitreDeSejour)

169
00:04:17,462 --> 00:04:17,462
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,464 --> 00:04:23,891
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

