1
00:00:00,002 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,084
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,085 --> 00:00:00,086
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,086 --> 00:00:00,087
9. DriverName = ""

5
00:00:00,088 --> 00:00:03,586
13. openBrowser("")

6
00:00:03,587 --> 00:00:03,588
17. driver = getWebDriver()

7
00:00:03,589 --> 00:00:03,590
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,590 --> 00:00:03,593
25. out.println(wrappedDriver.getClass())

9
00:00:03,593 --> 00:00:03,595
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,595 --> 00:00:03,595
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,597 --> 00:00:03,597
6. println("DriverName :" + DriverName)

12
00:00:03,597 --> 00:00:03,599
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,600 --> 00:00:03,601
33. DriverName = DriverName

14
00:00:03,603 --> 00:00:06,611
37. delay(medium_wait)

15
00:00:06,612 --> 00:00:06,612
41. executedBrowser = getExecutedBrowser()

16
00:00:06,614 --> 00:00:06,614
45. if (Profiles == "Usager")

17
00:00:06,614 --> 00:00:06,614
1. switch (DriverName)

18
00:00:06,615 --> 00:00:06,615
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,617 --> 00:00:09,096
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,100 --> 00:00:09,101
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,103 --> 00:00:09,124
14. maximizeWindow()

22
00:00:09,125 --> 00:00:09,126
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,128 --> 00:00:09,128
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,129 --> 00:00:09,211
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,212 --> 00:00:09,213
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,214 --> 00:00:09,215
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,216 --> 00:00:09,217
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,218 --> 00:00:09,368
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,369 --> 00:00:11,620
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,621 --> 00:00:14,083
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,085 --> 00:00:14,086
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,088 --> 00:00:17,100
27. delay(3)

33
00:00:17,101 --> 00:00:22,113
32. delay(5)

34
00:00:22,115 --> 00:00:22,285
38. Vérification de l'étape :

35
00:00:22,285 --> 00:00:22,286
42. break

36
00:00:22,287 --> 00:00:22,288
49. if (Profiles == "Agent")

37
00:00:22,289 --> 00:00:22,290
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,291 --> 00:00:22,362
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,362 --> 00:00:22,364
5. Call Highlight.on() automatically

40
00:00:22,365 --> 00:00:22,388
9. waitForPageLoad(5)

41
00:00:22,390 --> 00:00:24,895
15. Cliquer sur le lien Se Connecter :

42
00:00:24,897 --> 00:00:24,897
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,900 --> 00:00:24,981
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,983 --> 00:00:24,984
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,986 --> 00:00:24,986
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,988 --> 00:00:24,988
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,989 --> 00:00:25,146
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,147 --> 00:00:27,410
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,412 --> 00:00:29,768
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,769 --> 00:00:29,770
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,772 --> 00:00:32,782
27. delay(3)

52
00:00:32,784 --> 00:00:36,175
25. Première visiteq? Créez votre compte :

53
00:00:36,175 --> 00:00:36,197
29. waitForPageLoad(5)

54
00:00:36,199 --> 00:00:36,202
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,203 --> 00:00:41,345
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,347 --> 00:00:41,347
45.  Fournir La Date de début de validité :

57
00:00:41,349 --> 00:00:41,349
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,351 --> 00:00:41,352
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,353 --> 00:00:45,818
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,819 --> 00:00:48,269
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,270 --> 00:00:52,606
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,608 --> 00:00:52,609
71.  Fournir La Date de fin de validité :

63
00:00:52,610 --> 00:00:52,610
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,613 --> 00:00:52,613
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,615 --> 00:00:56,962
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,964 --> 00:00:59,521
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,522 --> 00:01:03,890
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,891 --> 00:01:06,160
97. Validation de la page pour la création du compte :

69
00:01:06,162 --> 00:01:06,246
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,246 --> 00:01:09,265
5.  Exit Action ou on passe à la création

71
00:01:09,266 --> 00:01:09,267
9. StopTestCase = false

72
00:01:09,268 --> 00:01:15,639
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,641 --> 00:01:15,642
17. if (MsgAlertPresent)

74
00:01:15,643 --> 00:01:15,645
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,647 --> 00:01:15,668
21. waitForPageLoad(2)

76
00:01:15,670 --> 00:01:15,672
111. Exit TestCase

77
00:01:15,676 --> 00:01:15,771
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,772 --> 00:01:18,787
5.  Exit Action ou on passe à la création

79
00:01:18,789 --> 00:01:18,789
9. StopTestCase = false

80
00:01:18,790 --> 00:01:22,073
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,076 --> 00:01:22,077
17. if (MsgAlertPresent)

82
00:01:22,079 --> 00:01:22,080
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,082 --> 00:01:22,105
21. waitForPageLoad(2)

84
00:01:22,106 --> 00:01:22,107
125. Exit TestCase

85
00:01:22,108 --> 00:01:22,109
131.  Création de Email utilisateur

86
00:01:22,110 --> 00:01:24,118
135. delay(2)

87
00:01:24,121 --> 00:01:28,822
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:28,825 --> 00:01:33,463
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,465 --> 00:01:35,723
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,724 --> 00:01:37,731
151. delay(2)

91
00:01:37,732 --> 00:01:40,137
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,139 --> 00:01:42,152
159. delay(2)

93
00:01:42,153 --> 00:01:42,171
165. Get all cookies after Event NetWork in Page

94
00:01:42,173 --> 00:01:42,173
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,174 --> 00:01:42,175
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,176 --> 00:01:44,246
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,248 --> 00:01:44,248
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,250 --> 00:01:44,360
183. Vérification de la conformité du nouveau MDP

99
00:01:44,362 --> 00:01:44,363
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,367 --> 00:01:44,367
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,369 --> 00:01:49,144
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,146 --> 00:01:53,749
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,751 --> 00:01:56,072
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,073 --> 00:01:56,217
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,217 --> 00:01:56,217
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,217 --> 00:02:00,913
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:00,917 --> 00:02:05,759
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,763 --> 00:02:08,064
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,067 --> 00:02:08,203
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,204 --> 00:02:08,205
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,209 --> 00:02:12,873
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:12,876 --> 00:02:17,549
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,550 --> 00:02:19,793
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:19,795 --> 00:02:19,942
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:19,944 --> 00:02:19,945
67. println("Créer un mot de passe sans chiffre")

116
00:02:19,947 --> 00:02:24,631
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,634 --> 00:02:29,347
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,349 --> 00:02:31,631
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,633 --> 00:02:31,793
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,795 --> 00:02:31,795
87. println("Saisir 2 mots de passe différents")

121
00:02:31,798 --> 00:02:36,430
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,435 --> 00:02:41,101
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,103 --> 00:02:43,388
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,390 --> 00:02:43,542
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,545 --> 00:02:43,546
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,548 --> 00:02:48,159
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,161 --> 00:02:52,710
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,713 --> 00:02:54,983
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,985 --> 00:02:55,132
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,133 --> 00:02:59,705
189. Renseigner PDM Valide

131
00:02:59,706 --> 00:03:04,264
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,266 --> 00:03:06,525
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,526 --> 00:03:09,742
203. Retour à l'accueil

134
00:03:09,744 --> 00:03:09,767
207. waitForPageLoad(5)

135
00:03:09,769 --> 00:03:09,770
17. if (StopTestCase == false)

136
00:03:09,774 --> 00:03:09,847
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,849 --> 00:03:09,850
1. if (Profiles == "Usager")

138
00:03:09,854 --> 00:03:14,875
1. delay(5)

139
00:03:14,876 --> 00:03:17,496
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,499 --> 00:03:17,568
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,568 --> 00:03:17,568
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,568 --> 00:03:17,568
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,580 --> 00:03:17,580
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,581 --> 00:03:20,858
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:20,858 --> 00:03:20,863
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:20,863 --> 00:03:23,882
27. delay(3)

147
00:03:23,882 --> 00:03:28,882
17. delay(5)

148
00:03:28,884 --> 00:03:33,204
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,206 --> 00:03:33,206
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,206 --> 00:03:37,531
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,533 --> 00:03:41,106
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,108 --> 00:03:56,123
39. delay(15)

153
00:03:56,125 --> 00:03:56,245
45. Vérification position sur la page d'accueil

154
00:03:56,247 --> 00:03:56,249
7. Identification : Portail Agent

155
00:03:56,250 --> 00:03:56,252
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,254 --> 00:03:56,322
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,324 --> 00:03:56,325
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,327 --> 00:03:59,338
5. delay(3)

159
00:03:59,342 --> 00:03:59,774
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:03:59,778 --> 00:04:02,786
15. delay(3)

161
00:04:02,788 --> 00:04:02,789
19. switch (PourQui)

162
00:04:02,791 --> 00:04:05,038
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,042 --> 00:04:05,042
6. break

164
00:04:05,043 --> 00:04:07,375
25. Je valide Mon choix

165
00:04:07,377 --> 00:04:07,464
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,466 --> 00:04:07,470
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,472 --> 00:04:17,477
5. delay(10)

168
00:04:17,479 --> 00:04:17,480
9. switch (TypeTitreDeSejour)

169
00:04:17,481 --> 00:04:17,482
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,483 --> 00:04:23,955
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

