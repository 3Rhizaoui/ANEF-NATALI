1
00:00:00,002 --> 00:00:00,004
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,009 --> 00:00:00,087
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,088 --> 00:00:00,089
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,090 --> 00:00:00,090
9. DriverName = ""

5
00:00:00,091 --> 00:00:03,524
13. openBrowser("")

6
00:00:03,525 --> 00:00:03,526
17. driver = getWebDriver()

7
00:00:03,527 --> 00:00:03,527
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,529 --> 00:00:03,529
25. out.println(wrappedDriver.getClass())

9
00:00:03,530 --> 00:00:03,531
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,532 --> 00:00:03,532
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,533 --> 00:00:03,534
6. println("DriverName :" + DriverName)

12
00:00:03,534 --> 00:00:03,535
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,536 --> 00:00:03,536
33. DriverName = DriverName

14
00:00:03,539 --> 00:00:06,545
37. delay(medium_wait)

15
00:00:06,546 --> 00:00:06,546
41. executedBrowser = getExecutedBrowser()

16
00:00:06,546 --> 00:00:06,548
45. if (Profiles == "Usager")

17
00:00:06,548 --> 00:00:06,549
1. switch (DriverName)

18
00:00:06,549 --> 00:00:06,550
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,550 --> 00:00:09,026
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,027 --> 00:00:09,029
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,030 --> 00:00:09,058
14. maximizeWindow()

22
00:00:09,060 --> 00:00:09,061
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,062 --> 00:00:09,063
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,064 --> 00:00:09,149
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,151 --> 00:00:09,152
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,153 --> 00:00:09,153
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,154 --> 00:00:09,155
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,156 --> 00:00:09,289
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,290 --> 00:00:11,555
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,555 --> 00:00:13,913
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,915 --> 00:00:13,916
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,917 --> 00:00:16,922
27. delay(3)

33
00:00:16,923 --> 00:00:21,931
32. delay(5)

34
00:00:21,932 --> 00:00:22,091
38. Vérification de l'étape :

35
00:00:22,092 --> 00:00:22,093
42. break

36
00:00:22,094 --> 00:00:22,095
49. if (Profiles == "Agent")

37
00:00:22,096 --> 00:00:22,097
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,098 --> 00:00:22,180
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,181 --> 00:00:22,183
5. Call Highlight.on() automatically

40
00:00:22,184 --> 00:00:22,203
9. waitForPageLoad(5)

41
00:00:22,205 --> 00:00:24,689
15. Cliquer sur le lien Se Connecter :

42
00:00:24,691 --> 00:00:24,692
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,694 --> 00:00:24,773
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,775 --> 00:00:24,776
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,777 --> 00:00:24,778
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,779 --> 00:00:24,779
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,780 --> 00:00:24,949
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:24,950 --> 00:00:27,176
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,177 --> 00:00:29,559
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,561 --> 00:00:29,562
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,563 --> 00:00:32,568
27. delay(3)

52
00:00:32,570 --> 00:00:35,845
25. Première visiteq? Créez votre compte :

53
00:00:35,847 --> 00:00:36,349
29. waitForPageLoad(5)

54
00:00:36,351 --> 00:00:36,352
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,354 --> 00:00:40,945
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:40,947 --> 00:00:40,947
45.  Fournir La Date de début de validité :

57
00:00:40,947 --> 00:00:40,947
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:40,947 --> 00:00:40,947
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:40,947 --> 00:00:45,303
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,305 --> 00:00:47,851
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:47,854 --> 00:00:52,197
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,199 --> 00:00:52,200
71.  Fournir La Date de fin de validité :

63
00:00:52,202 --> 00:00:52,202
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,203 --> 00:00:52,203
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,204 --> 00:00:56,519
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,520 --> 00:00:59,008
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,010 --> 00:01:03,367
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,369 --> 00:01:05,623
97. Validation de la page pour la création du compte :

69
00:01:05,624 --> 00:01:05,713
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:05,715 --> 00:01:08,730
5.  Exit Action ou on passe à la création

71
00:01:08,732 --> 00:01:08,732
9. StopTestCase = false

72
00:01:08,733 --> 00:01:08,908
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:08,910 --> 00:01:08,911
17. if (MsgAlertPresent)

74
00:01:08,913 --> 00:01:09,116
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

75
00:01:09,117 --> 00:01:09,120
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

76
00:01:09,122 --> 00:01:09,122
9. MsgStopTestCase = TextAlert

77
00:01:09,124 --> 00:01:09,126
13. return null

78
00:01:09,127 --> 00:01:09,128
111. Exit TestCase

79
00:01:09,129 --> 00:01:09,131
1. return null

80
00:01:09,132 --> 00:01:09,133
17. if (StopTestCase == false)

