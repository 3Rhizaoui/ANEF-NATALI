1
00:00:00,001 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,008 --> 00:00:00,097
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,098 --> 00:00:00,098
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,098 --> 00:00:00,100
9. DriverName = ""

5
00:00:00,101 --> 00:00:03,630
13. openBrowser("")

6
00:00:03,631 --> 00:00:03,631
17. driver = getWebDriver()

7
00:00:03,632 --> 00:00:03,633
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,634 --> 00:00:03,634
25. out.println(wrappedDriver.getClass())

9
00:00:03,635 --> 00:00:03,636
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,637 --> 00:00:03,637
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,638 --> 00:00:03,638
6. println("DriverName :" + DriverName)

12
00:00:03,639 --> 00:00:03,639
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,640 --> 00:00:03,641
33. DriverName = DriverName

14
00:00:03,641 --> 00:00:06,653
37. delay(medium_wait)

15
00:00:06,654 --> 00:00:06,654
41. executedBrowser = getExecutedBrowser()

16
00:00:06,654 --> 00:00:06,655
45. if (Profiles == "Usager")

17
00:00:06,655 --> 00:00:06,656
1. switch (DriverName)

18
00:00:06,656 --> 00:00:06,656
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,658 --> 00:00:09,105
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,108 --> 00:00:09,110
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,112 --> 00:00:09,134
14. maximizeWindow()

22
00:00:09,135 --> 00:00:09,136
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,137 --> 00:00:09,138
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,140 --> 00:00:09,219
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,222 --> 00:00:09,225
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,226 --> 00:00:09,227
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,230 --> 00:00:09,231
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,232 --> 00:00:09,405
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,406 --> 00:00:11,671
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,673 --> 00:00:14,058
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,060 --> 00:00:14,061
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,062 --> 00:00:17,075
27. delay(3)

33
00:00:17,077 --> 00:00:22,093
32. delay(5)

34
00:00:22,094 --> 00:00:22,277
38. Vérification de l'étape :

35
00:00:22,278 --> 00:00:22,278
42. break

36
00:00:22,279 --> 00:00:22,280
49. if (Profiles == "Agent")

37
00:00:22,281 --> 00:00:22,283
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,287 --> 00:00:22,368
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,370 --> 00:00:22,371
5. Call Highlight.on() automatically

40
00:00:22,373 --> 00:00:22,403
9. waitForPageLoad(5)

41
00:00:22,405 --> 00:00:24,952
15. Cliquer sur le lien Se Connecter :

42
00:00:24,954 --> 00:00:24,955
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,956 --> 00:00:25,036
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,036 --> 00:00:25,036
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,036 --> 00:00:25,036
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,036 --> 00:00:25,036
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,036 --> 00:00:25,206
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,207 --> 00:00:27,472
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,473 --> 00:00:29,866
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,868 --> 00:00:29,869
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,870 --> 00:00:32,889
27. delay(3)

52
00:00:32,889 --> 00:00:36,281
25. Première visiteq? Créez votre compte :

53
00:00:36,283 --> 00:00:36,811
29. waitForPageLoad(5)

54
00:00:36,815 --> 00:00:36,817
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,819 --> 00:00:41,406
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,409 --> 00:00:41,409
45.  Fournir La Date de début de validité :

57
00:00:41,411 --> 00:00:41,413
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,415 --> 00:00:41,416
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,417 --> 00:00:45,806
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,808 --> 00:00:48,217
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,218 --> 00:00:52,557
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,559 --> 00:00:52,560
71.  Fournir La Date de fin de validité :

63
00:00:52,562 --> 00:00:52,562
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,563 --> 00:00:52,563
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,566 --> 00:00:56,942
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,944 --> 00:00:59,507
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,508 --> 00:01:03,877
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,879 --> 00:01:06,137
97. Validation de la page pour la création du compte :

69
00:01:06,140 --> 00:01:06,228
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,228 --> 00:01:09,236
5.  Exit Action ou on passe à la création

71
00:01:09,237 --> 00:01:09,238
9. StopTestCase = false

72
00:01:09,239 --> 00:01:15,576
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,578 --> 00:01:15,579
17. if (MsgAlertPresent)

74
00:01:15,580 --> 00:01:15,581
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,583 --> 00:01:15,602
21. waitForPageLoad(2)

76
00:01:15,605 --> 00:01:15,607
111. Exit TestCase

77
00:01:15,609 --> 00:01:15,686
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,688 --> 00:01:18,702
5.  Exit Action ou on passe à la création

79
00:01:18,705 --> 00:01:18,706
9. StopTestCase = false

80
00:01:18,707 --> 00:01:22,022
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,024 --> 00:01:22,024
17. if (MsgAlertPresent)

82
00:01:22,026 --> 00:01:22,027
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,028 --> 00:01:22,050
21. waitForPageLoad(2)

84
00:01:22,053 --> 00:01:22,054
125. Exit TestCase

85
00:01:22,056 --> 00:01:22,056
131.  Création de Email utilisateur

86
00:01:22,058 --> 00:01:24,072
135. delay(2)

87
00:01:24,074 --> 00:01:28,783
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:28,784 --> 00:01:33,516
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,519 --> 00:01:35,852
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,853 --> 00:01:37,866
151. delay(2)

91
00:01:37,868 --> 00:01:40,277
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,280 --> 00:01:42,288
159. delay(2)

93
00:01:42,289 --> 00:01:42,327
165. Get all cookies after Event NetWork in Page

94
00:01:42,330 --> 00:01:42,330
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,332 --> 00:01:42,333
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,335 --> 00:01:44,410
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,412 --> 00:01:44,413
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,414 --> 00:01:44,489
183. Vérification de la conformité du nouveau MDP

99
00:01:44,491 --> 00:01:44,493
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,496 --> 00:01:44,497
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,500 --> 00:01:49,275
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,276 --> 00:01:53,846
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,847 --> 00:01:56,155
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,157 --> 00:01:56,299
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,301 --> 00:01:56,301
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,303 --> 00:02:01,043
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,046 --> 00:02:05,757
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,759 --> 00:02:08,055
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,056 --> 00:02:08,192
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,194 --> 00:02:08,195
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,197 --> 00:02:12,840
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:12,842 --> 00:02:17,428
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,430 --> 00:02:19,702
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:19,705 --> 00:02:19,822
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:19,824 --> 00:02:19,824
67. println("Créer un mot de passe sans chiffre")

116
00:02:19,825 --> 00:02:24,425
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,427 --> 00:02:29,062
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,064 --> 00:02:31,328
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,330 --> 00:02:31,433
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,436 --> 00:02:31,437
87. println("Saisir 2 mots de passe différents")

121
00:02:31,439 --> 00:02:35,991
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:35,994 --> 00:02:40,612
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:40,615 --> 00:02:42,924
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:42,926 --> 00:02:43,079
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,082 --> 00:02:43,082
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,085 --> 00:02:47,760
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:47,762 --> 00:02:52,277
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,279 --> 00:02:54,530
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,531 --> 00:02:54,663
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:54,677 --> 00:02:59,264
189. Renseigner PDM Valide

131
00:02:59,265 --> 00:03:03,874
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:03,876 --> 00:03:06,125
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,128 --> 00:03:09,284
203. Retour à l'accueil

134
00:03:09,287 --> 00:03:09,317
207. waitForPageLoad(5)

135
00:03:09,322 --> 00:03:09,322
17. if (StopTestCase == false)

136
00:03:09,325 --> 00:03:09,411
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,414 --> 00:03:09,415
1. if (Profiles == "Usager")

138
00:03:09,418 --> 00:03:14,432
1. delay(5)

139
00:03:14,433 --> 00:03:17,051
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,052 --> 00:03:17,137
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,137 --> 00:03:17,137
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,137 --> 00:03:17,144
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,146 --> 00:03:17,146
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,148 --> 00:03:20,487
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:20,487 --> 00:03:20,487
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:20,487 --> 00:03:23,492
27. delay(3)

147
00:03:23,494 --> 00:03:28,502
17. delay(5)

148
00:03:28,503 --> 00:03:32,869
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:32,870 --> 00:03:32,870
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:32,870 --> 00:03:37,184
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,187 --> 00:03:40,898
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:40,901 --> 00:03:55,914
39. delay(15)

153
00:03:55,917 --> 00:03:56,100
45. Vérification position sur la page d'accueil

154
00:03:56,103 --> 00:03:56,104
7. Identification : Portail Agent

155
00:03:56,108 --> 00:03:56,110
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,112 --> 00:03:56,189
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,192 --> 00:03:56,194
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,197 --> 00:03:59,213
5. delay(3)

159
00:03:59,216 --> 00:03:59,727
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:03:59,730 --> 00:04:02,750
15. delay(3)

161
00:04:02,754 --> 00:04:02,754
19. switch (PourQui)

162
00:04:02,756 --> 00:04:05,032
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,037 --> 00:04:05,037
6. break

164
00:04:05,039 --> 00:04:07,440
25. Je valide Mon choix

165
00:04:07,444 --> 00:04:07,536
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,539 --> 00:04:07,543
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,545 --> 00:04:17,565
5. delay(10)

168
00:04:17,567 --> 00:04:17,568
9. switch (TypeTitreDeSejour)

169
00:04:17,569 --> 00:04:17,569
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,571 --> 00:04:24,063
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

