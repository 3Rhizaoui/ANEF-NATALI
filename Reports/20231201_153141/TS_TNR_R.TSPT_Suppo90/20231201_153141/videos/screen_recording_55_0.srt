1
00:00:00,001 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,093
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,096 --> 00:00:00,097
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,099 --> 00:00:00,099
9. DriverName = ""

5
00:00:00,100 --> 00:00:03,521
13. openBrowser("")

6
00:00:03,522 --> 00:00:03,523
17. driver = getWebDriver()

7
00:00:03,523 --> 00:00:03,523
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,523 --> 00:00:03,523
25. out.println(wrappedDriver.getClass())

9
00:00:03,523 --> 00:00:03,523
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,523 --> 00:00:03,523
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,523 --> 00:00:03,523
6. println("DriverName :" + DriverName)

12
00:00:03,523 --> 00:00:03,523
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,523 --> 00:00:03,523
33. DriverName = DriverName

14
00:00:03,523 --> 00:00:06,549
37. delay(medium_wait)

15
00:00:06,551 --> 00:00:06,551
41. executedBrowser = getExecutedBrowser()

16
00:00:06,551 --> 00:00:06,551
45. if (Profiles == "Usager")

17
00:00:06,551 --> 00:00:06,551
1. switch (DriverName)

18
00:00:06,551 --> 00:00:06,551
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,551 --> 00:00:08,997
1. navigateToUrl(URL_ANEFQualif)

20
00:00:08,998 --> 00:00:08,998
10. Navigation à URL Préprode  et Création MDP

21
00:00:08,999 --> 00:00:09,025
14. maximizeWindow()

22
00:00:09,027 --> 00:00:09,027
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,028 --> 00:00:09,028
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,030 --> 00:00:09,102
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,103 --> 00:00:09,104
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,106 --> 00:00:09,107
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,108 --> 00:00:09,109
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,110 --> 00:00:09,286
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,287 --> 00:00:11,552
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,554 --> 00:00:13,930
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,931 --> 00:00:13,932
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,933 --> 00:00:16,951
27. delay(3)

33
00:00:16,952 --> 00:00:21,964
32. delay(5)

34
00:00:21,964 --> 00:00:22,138
38. Vérification de l'étape :

35
00:00:22,140 --> 00:00:22,140
42. break

36
00:00:22,141 --> 00:00:22,142
49. if (Profiles == "Agent")

37
00:00:22,143 --> 00:00:22,144
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,145 --> 00:00:22,225
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,225 --> 00:00:22,229
5. Call Highlight.on() automatically

40
00:00:22,231 --> 00:00:22,251
9. waitForPageLoad(5)

41
00:00:22,252 --> 00:00:24,746
15. Cliquer sur le lien Se Connecter :

42
00:00:24,748 --> 00:00:24,748
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,749 --> 00:00:24,850
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,851 --> 00:00:24,853
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,856 --> 00:00:24,856
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,858 --> 00:00:24,858
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,860 --> 00:00:25,012
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,013 --> 00:00:27,266
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,267 --> 00:00:29,671
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,673 --> 00:00:29,674
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,676 --> 00:00:32,684
27. delay(3)

52
00:00:32,685 --> 00:00:36,263
25. Première visiteq? Créez votre compte :

53
00:00:36,263 --> 00:00:36,518
29. waitForPageLoad(5)

54
00:00:36,520 --> 00:00:36,521
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,522 --> 00:00:41,451
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,454 --> 00:00:41,454
45.  Fournir La Date de début de validité :

57
00:00:41,456 --> 00:00:41,457
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,461 --> 00:00:41,462
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,463 --> 00:00:45,900
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,902 --> 00:00:48,299
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:48,301 --> 00:00:52,666
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,667 --> 00:00:52,668
71.  Fournir La Date de fin de validité :

63
00:00:52,669 --> 00:00:52,670
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,671 --> 00:00:52,671
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,673 --> 00:00:57,004
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:57,005 --> 00:00:59,604
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,606 --> 00:01:03,985
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,985 --> 00:01:06,240
97. Validation de la page pour la création du compte :

69
00:01:06,242 --> 00:01:06,321
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,323 --> 00:01:09,328
5.  Exit Action ou on passe à la création

71
00:01:09,331 --> 00:01:09,332
9. StopTestCase = false

72
00:01:09,333 --> 00:01:15,639
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,641 --> 00:01:15,642
17. if (MsgAlertPresent)

74
00:01:15,645 --> 00:01:15,648
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,649 --> 00:01:15,677
21. waitForPageLoad(2)

76
00:01:15,678 --> 00:01:15,679
111. Exit TestCase

77
00:01:15,680 --> 00:01:15,765
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,767 --> 00:01:18,784
5.  Exit Action ou on passe à la création

79
00:01:18,786 --> 00:01:18,786
9. StopTestCase = false

80
00:01:18,788 --> 00:01:22,140
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,142 --> 00:01:22,143
17. if (MsgAlertPresent)

82
00:01:22,147 --> 00:01:22,149
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,151 --> 00:01:22,215
21. waitForPageLoad(2)

84
00:01:22,218 --> 00:01:22,218
125. Exit TestCase

85
00:01:22,220 --> 00:01:22,220
131.  Création de Email utilisateur

86
00:01:22,223 --> 00:01:24,227
135. delay(2)

87
00:01:24,228 --> 00:01:28,903
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:28,906 --> 00:01:33,616
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,618 --> 00:01:35,901
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,903 --> 00:01:37,913
151. delay(2)

91
00:01:37,914 --> 00:01:40,343
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,345 --> 00:01:42,360
159. delay(2)

93
00:01:42,361 --> 00:01:42,382
165. Get all cookies after Event NetWork in Page

94
00:01:42,383 --> 00:01:42,384
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,385 --> 00:01:42,385
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,387 --> 00:01:44,458
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,459 --> 00:01:44,461
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,462 --> 00:01:44,542
183. Vérification de la conformité du nouveau MDP

99
00:01:44,544 --> 00:01:44,545
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,547 --> 00:01:44,548
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,549 --> 00:01:49,266
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,268 --> 00:01:53,855
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,857 --> 00:01:56,180
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,183 --> 00:01:56,318
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,320 --> 00:01:56,321
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,324 --> 00:02:01,229
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,232 --> 00:02:06,002
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:06,004 --> 00:02:08,329
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,332 --> 00:02:08,463
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,465 --> 00:02:08,465
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,467 --> 00:02:13,139
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,142 --> 00:02:17,766
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,768 --> 00:02:20,028
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:20,031 --> 00:02:20,157
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,160 --> 00:02:20,161
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,163 --> 00:02:24,813
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,815 --> 00:02:29,458
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,459 --> 00:02:31,708
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,710 --> 00:02:31,832
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,835 --> 00:02:31,835
87. println("Saisir 2 mots de passe différents")

121
00:02:31,837 --> 00:02:36,441
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,444 --> 00:02:41,101
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,104 --> 00:02:43,407
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,409 --> 00:02:43,560
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,562 --> 00:02:43,563
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,564 --> 00:02:48,176
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,177 --> 00:02:52,694
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,696 --> 00:02:54,945
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,948 --> 00:02:55,080
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,083 --> 00:02:59,674
189. Renseigner PDM Valide

131
00:02:59,675 --> 00:03:04,214
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,215 --> 00:03:06,492
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,494 --> 00:03:09,738
203. Retour à l'accueil

134
00:03:09,743 --> 00:03:09,772
207. waitForPageLoad(5)

135
00:03:09,773 --> 00:03:09,774
17. if (StopTestCase == false)

136
00:03:09,776 --> 00:03:09,850
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,851 --> 00:03:09,852
1. if (Profiles == "Usager")

138
00:03:09,853 --> 00:03:14,870
1. delay(5)

139
00:03:14,872 --> 00:03:17,486
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,490 --> 00:03:17,576
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,577 --> 00:03:17,578
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,580 --> 00:03:17,580
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,583 --> 00:03:17,583
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,584 --> 00:03:20,902
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:20,904 --> 00:03:20,904
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:20,906 --> 00:03:23,914
27. delay(3)

147
00:03:23,916 --> 00:03:28,925
17. delay(5)

148
00:03:28,927 --> 00:03:33,288
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,290 --> 00:03:33,291
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,293 --> 00:03:37,634
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,637 --> 00:03:41,837
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,839 --> 00:03:56,853
39. delay(15)

153
00:03:56,855 --> 00:03:56,967
45. Vérification position sur la page d'accueil

154
00:03:56,968 --> 00:03:56,970
7. Identification : Portail Agent

155
00:03:56,971 --> 00:03:56,972
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,974 --> 00:03:57,044
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:57,046 --> 00:03:57,048
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:57,050 --> 00:04:00,062
5. delay(3)

159
00:04:00,063 --> 00:04:00,528
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,531 --> 00:04:03,534
15. delay(3)

161
00:04:03,537 --> 00:04:03,537
19. switch (PourQui)

162
00:04:03,538 --> 00:04:05,786
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,791 --> 00:04:05,792
6. break

164
00:04:05,794 --> 00:04:08,120
25. Je valide Mon choix

165
00:04:08,123 --> 00:04:08,216
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:08,216 --> 00:04:08,220
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:08,224 --> 00:04:18,240
5. delay(10)

168
00:04:18,241 --> 00:04:18,241
9. switch (TypeTitreDeSejour)

169
00:04:18,243 --> 00:04:18,243
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:18,245 --> 00:04:24,641
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

