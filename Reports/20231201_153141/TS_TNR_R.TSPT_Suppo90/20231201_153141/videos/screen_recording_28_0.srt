1
00:00:00,001 --> 00:00:00,002
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,006 --> 00:00:00,079
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,080 --> 00:00:00,082
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,083 --> 00:00:00,084
9. DriverName = ""

5
00:00:00,085 --> 00:00:03,253
13. openBrowser("")

6
00:00:03,253 --> 00:00:03,253
17. driver = getWebDriver()

7
00:00:03,253 --> 00:00:03,253
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,260 --> 00:00:03,261
25. out.println(wrappedDriver.getClass())

9
00:00:03,262 --> 00:00:03,263
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,265 --> 00:00:03,266
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,267 --> 00:00:03,267
6. println("DriverName :" + DriverName)

12
00:00:03,267 --> 00:00:03,267
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,273 --> 00:00:03,274
33. DriverName = DriverName

14
00:00:03,275 --> 00:00:06,277
37. delay(medium_wait)

15
00:00:06,278 --> 00:00:06,278
41. executedBrowser = getExecutedBrowser()

16
00:00:06,278 --> 00:00:06,280
45. if (Profiles == "Usager")

17
00:00:06,281 --> 00:00:06,281
1. switch (DriverName)

18
00:00:06,282 --> 00:00:06,282
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,283 --> 00:00:08,887
1. navigateToUrl(URL_ANEFQualif)

20
00:00:08,889 --> 00:00:08,889
10. Navigation à URL Préprode  et Création MDP

21
00:00:08,891 --> 00:00:08,924
14. maximizeWindow()

22
00:00:08,925 --> 00:00:08,926
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:08,927 --> 00:00:08,927
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:08,929 --> 00:00:09,015
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,017 --> 00:00:09,020
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,023 --> 00:00:09,023
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,024 --> 00:00:09,025
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,026 --> 00:00:09,261
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,263 --> 00:00:11,634
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,635 --> 00:00:14,099
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,100 --> 00:00:14,101
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,103 --> 00:00:17,112
27. delay(3)

33
00:00:17,114 --> 00:00:22,130
32. delay(5)

34
00:00:22,133 --> 00:00:22,266
38. Vérification de l'étape :

35
00:00:22,267 --> 00:00:22,268
42. break

36
00:00:22,269 --> 00:00:22,270
49. if (Profiles == "Agent")

37
00:00:22,271 --> 00:00:22,277
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,278 --> 00:00:22,357
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,358 --> 00:00:22,359
5. Call Highlight.on() automatically

40
00:00:22,360 --> 00:00:22,388
9. waitForPageLoad(5)

41
00:00:22,391 --> 00:00:24,889
15. Cliquer sur le lien Se Connecter :

42
00:00:24,890 --> 00:00:24,890
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,892 --> 00:00:24,976
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,977 --> 00:00:24,978
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,979 --> 00:00:24,979
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,982 --> 00:00:24,982
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,984 --> 00:00:25,125
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,125 --> 00:00:27,392
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,394 --> 00:00:29,795
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,797 --> 00:00:29,798
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,799 --> 00:00:32,810
27. delay(3)

52
00:00:32,812 --> 00:00:36,089
25. Première visiteq? Créez votre compte :

53
00:00:36,091 --> 00:00:36,583
29. waitForPageLoad(5)

54
00:00:36,585 --> 00:00:36,586
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,587 --> 00:00:41,174
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,176 --> 00:00:41,177
45.  Fournir La Date de début de validité :

57
00:00:41,178 --> 00:00:41,179
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,182 --> 00:00:41,183
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,184 --> 00:00:45,545
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,547 --> 00:00:47,960
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:47,962 --> 00:00:52,339
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,341 --> 00:00:52,341
71.  Fournir La Date de fin de validité :

63
00:00:52,341 --> 00:00:52,341
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,341 --> 00:00:52,341
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,346 --> 00:00:56,711
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,713 --> 00:00:59,257
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,257 --> 00:01:03,672
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,673 --> 00:01:05,986
97. Validation de la page pour la création du compte :

69
00:01:05,988 --> 00:01:06,077
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,079 --> 00:01:09,099
5.  Exit Action ou on passe à la création

71
00:01:09,100 --> 00:01:09,101
9. StopTestCase = false

72
00:01:09,102 --> 00:01:15,400
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:15,402 --> 00:01:15,403
17. if (MsgAlertPresent)

74
00:01:15,406 --> 00:01:15,409
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:15,410 --> 00:01:15,437
21. waitForPageLoad(2)

76
00:01:15,438 --> 00:01:15,438
111. Exit TestCase

77
00:01:15,439 --> 00:01:15,526
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:15,528 --> 00:01:18,543
5.  Exit Action ou on passe à la création

79
00:01:18,545 --> 00:01:18,546
9. StopTestCase = false

80
00:01:18,547 --> 00:01:21,850
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:21,853 --> 00:01:21,853
17. if (MsgAlertPresent)

82
00:01:21,854 --> 00:01:21,854
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:21,856 --> 00:01:21,886
21. waitForPageLoad(2)

84
00:01:21,888 --> 00:01:21,888
125. Exit TestCase

85
00:01:21,890 --> 00:01:21,891
131.  Création de Email utilisateur

86
00:01:21,892 --> 00:01:23,896
135. delay(2)

87
00:01:23,897 --> 00:01:28,565
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:28,568 --> 00:01:33,235
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:33,237 --> 00:01:35,482
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:35,484 --> 00:01:37,494
151. delay(2)

91
00:01:37,496 --> 00:01:39,906
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:39,908 --> 00:01:41,920
159. delay(2)

93
00:01:41,922 --> 00:01:41,958
165. Get all cookies after Event NetWork in Page

94
00:01:41,960 --> 00:01:41,960
171. Navigation à URL  Qualification et Création MDP

95
00:01:41,962 --> 00:01:41,962
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:41,963 --> 00:01:44,031
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,034 --> 00:01:44,034
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,036 --> 00:01:44,120
183. Vérification de la conformité du nouveau MDP

99
00:01:44,123 --> 00:01:44,128
3. waiting for the number of elements in the DOM to stop changing

100
00:01:44,131 --> 00:01:44,132
7. println("Créer un mot de passe sans majuscule")

101
00:01:44,136 --> 00:01:48,902
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:48,904 --> 00:01:53,635
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:53,637 --> 00:01:55,954
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:55,957 --> 00:01:56,116
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,116 --> 00:01:56,116
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,116 --> 00:02:00,854
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:00,855 --> 00:02:05,794
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:05,797 --> 00:02:08,152
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,154 --> 00:02:08,326
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,328 --> 00:02:08,328
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,330 --> 00:02:13,104
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,107 --> 00:02:17,698
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:17,700 --> 00:02:19,971
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:19,974 --> 00:02:20,073
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,074 --> 00:02:20,075
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,078 --> 00:02:24,697
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:24,698 --> 00:02:29,329
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:29,332 --> 00:02:31,579
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:31,581 --> 00:02:31,693
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:31,694 --> 00:02:31,695
87. println("Saisir 2 mots de passe différents")

121
00:02:31,698 --> 00:02:36,365
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:36,369 --> 00:02:41,036
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,038 --> 00:02:43,320
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:43,322 --> 00:02:43,458
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:43,459 --> 00:02:43,460
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:43,461 --> 00:02:48,072
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,076 --> 00:02:52,576
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:52,578 --> 00:02:54,837
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:54,839 --> 00:02:54,996
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:54,999 --> 00:02:59,576
189. Renseigner PDM Valide

131
00:02:59,578 --> 00:03:04,144
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:04,147 --> 00:03:06,410
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:06,413 --> 00:03:09,789
203. Retour à l'accueil

134
00:03:09,794 --> 00:03:09,827
207. waitForPageLoad(5)

135
00:03:09,828 --> 00:03:09,829
17. if (StopTestCase == false)

136
00:03:09,831 --> 00:03:09,908
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:09,909 --> 00:03:09,910
1. if (Profiles == "Usager")

138
00:03:09,912 --> 00:03:14,926
1. delay(5)

139
00:03:14,928 --> 00:03:17,608
7.  Cliquer sur le lien Se Connecter :

140
00:03:17,610 --> 00:03:17,693
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:17,695 --> 00:03:17,696
3. waiting for the number of elements in the DOM to stop changing

142
00:03:17,698 --> 00:03:17,699
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:17,702 --> 00:03:17,702
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:17,705 --> 00:03:21,010
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:21,013 --> 00:03:21,014
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:21,017 --> 00:03:24,030
27. delay(3)

147
00:03:24,031 --> 00:03:29,043
17. delay(5)

148
00:03:29,044 --> 00:03:33,458
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:33,461 --> 00:03:33,461
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:33,464 --> 00:03:37,789
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:37,791 --> 00:03:41,488
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:41,490 --> 00:03:56,507
39. delay(15)

153
00:03:56,509 --> 00:03:56,626
45. Vérification position sur la page d'accueil

154
00:03:56,628 --> 00:03:56,629
7. Identification : Portail Agent

155
00:03:56,631 --> 00:03:56,632
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:56,634 --> 00:03:56,710
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:56,712 --> 00:03:56,714
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:56,716 --> 00:03:59,721
5. delay(3)

159
00:03:59,722 --> 00:04:00,201
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,203 --> 00:04:03,221
15. delay(3)

161
00:04:03,223 --> 00:04:03,224
19. switch (PourQui)

162
00:04:03,226 --> 00:04:05,487
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:05,491 --> 00:04:05,493
6. break

164
00:04:05,495 --> 00:04:07,804
25. Je valide Mon choix

165
00:04:07,804 --> 00:04:07,919
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:07,922 --> 00:04:07,923
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:07,926 --> 00:04:17,944
5. delay(10)

168
00:04:17,946 --> 00:04:17,946
9. switch (TypeTitreDeSejour)

169
00:04:17,948 --> 00:04:17,948
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:17,950 --> 00:04:24,361
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

