1
00:00:00,002 --> 00:00:00,004
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,089
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,090 --> 00:00:00,091
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,092 --> 00:00:00,092
9. DriverName = ""

5
00:00:00,094 --> 00:00:03,786
13. openBrowser("")

6
00:00:03,788 --> 00:00:03,789
17. driver = getWebDriver()

7
00:00:03,792 --> 00:00:03,793
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,794 --> 00:00:03,795
25. out.println(wrappedDriver.getClass())

9
00:00:03,796 --> 00:00:03,797
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,798 --> 00:00:03,799
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,800 --> 00:00:03,800
6. println("DriverName :" + DriverName)

12
00:00:03,801 --> 00:00:03,802
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,803 --> 00:00:03,804
33. DriverName = DriverName

14
00:00:03,807 --> 00:00:06,813
37. delay(medium_wait)

15
00:00:06,814 --> 00:00:06,815
41. executedBrowser = getExecutedBrowser()

16
00:00:06,816 --> 00:00:06,816
45. if (Profiles == "Usager")

17
00:00:06,817 --> 00:00:06,818
1. switch (DriverName)

18
00:00:06,818 --> 00:00:06,819
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,819 --> 00:00:09,386
1. navigateToUrl(URL_ANEFQualif)

20
00:00:09,388 --> 00:00:09,390
10. Navigation à URL Préprode  et Création MDP

21
00:00:09,392 --> 00:00:09,416
14. maximizeWindow()

22
00:00:09,418 --> 00:00:09,419
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,420 --> 00:00:09,421
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,422 --> 00:00:09,500
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,502 --> 00:00:09,503
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,506 --> 00:00:09,506
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,507 --> 00:00:09,509
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,510 --> 00:00:09,656
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,658 --> 00:00:11,950
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,952 --> 00:00:14,351
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:14,353 --> 00:00:14,354
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:14,356 --> 00:00:17,367
27. delay(3)

33
00:00:17,369 --> 00:00:22,389
32. delay(5)

34
00:00:22,390 --> 00:00:22,608
38. Vérification de l'étape :

35
00:00:22,609 --> 00:00:22,610
42. break

36
00:00:22,612 --> 00:00:22,616
49. if (Profiles == "Agent")

37
00:00:22,617 --> 00:00:22,619
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,620 --> 00:00:22,707
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,708 --> 00:00:22,710
5. Call Highlight.on() automatically

40
00:00:22,712 --> 00:00:22,747
9. waitForPageLoad(5)

41
00:00:22,749 --> 00:00:25,783
15. Cliquer sur le lien Se Connecter :

42
00:00:25,785 --> 00:00:25,788
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:25,791 --> 00:00:25,857
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:25,857 --> 00:00:25,869
3. waiting for the number of elements in the DOM to stop changing

45
00:00:25,872 --> 00:00:25,873
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:25,875 --> 00:00:25,876
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:25,878 --> 00:00:26,034
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:26,035 --> 00:00:28,336
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:28,338 --> 00:00:30,921
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:30,924 --> 00:00:30,924
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:30,926 --> 00:00:33,937
27. delay(3)

52
00:00:33,938 --> 00:00:37,212
25. Première visiteq? Créez votre compte :

53
00:00:37,214 --> 00:00:37,699
29. waitForPageLoad(5)

54
00:00:37,702 --> 00:00:37,705
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:37,707 --> 00:00:42,299
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:42,301 --> 00:00:42,301
45.  Fournir La Date de début de validité :

57
00:00:42,303 --> 00:00:42,304
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:42,307 --> 00:00:42,307
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:42,309 --> 00:00:46,669
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:46,671 --> 00:00:49,021
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:49,022 --> 00:00:53,368
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:53,370 --> 00:00:53,371
71.  Fournir La Date de fin de validité :

63
00:00:53,372 --> 00:00:53,373
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:53,374 --> 00:00:53,375
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:53,376 --> 00:00:57,718
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:57,719 --> 00:01:00,252
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:01:00,254 --> 00:01:04,611
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:04,612 --> 00:01:06,898
97. Validation de la page pour la création du compte :

69
00:01:06,900 --> 00:01:06,972
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:06,972 --> 00:01:09,974
5.  Exit Action ou on passe à la création

71
00:01:09,976 --> 00:01:09,977
9. StopTestCase = false

72
00:01:09,978 --> 00:01:16,362
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:16,363 --> 00:01:16,364
17. if (MsgAlertPresent)

74
00:01:16,366 --> 00:01:16,367
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

75
00:01:16,370 --> 00:01:16,389
21. waitForPageLoad(2)

76
00:01:16,391 --> 00:01:16,392
111. Exit TestCase

77
00:01:16,393 --> 00:01:16,474
119. Appel Brique Réutilisable VerificationSiCompteExisteDeja

78
00:01:16,476 --> 00:01:19,494
5.  Exit Action ou on passe à la création

79
00:01:19,496 --> 00:01:19,497
9. StopTestCase = false

80
00:01:19,498 --> 00:01:22,806
13. MsgAlertPresent = verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Verif_PopUpCompteExisteDeja"), 2, OPTIONAL)

81
00:01:22,808 --> 00:01:22,808
17. if (MsgAlertPresent)

82
00:01:22,810 --> 00:01:22,811
2. markPassed("Vos informations ne sont pas associées à un compte ==>> Création d'un nouveau Compte avec ces Informations.")

83
00:01:22,812 --> 00:01:22,844
21. waitForPageLoad(2)

84
00:01:22,846 --> 00:01:22,847
125. Exit TestCase

85
00:01:22,849 --> 00:01:22,849
131.  Création de Email utilisateur

86
00:01:22,852 --> 00:01:24,858
135. delay(2)

87
00:01:24,860 --> 00:01:29,554
139. setText(findTestObject("Object Repository/Connexion Usager/Input_Email"), MonEmail)

88
00:01:29,556 --> 00:01:34,173
143. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmeEmail"), MonEmail)

89
00:01:34,175 --> 00:01:36,450
147. click(findTestObject("Object Repository/Connexion Usager/span_btn_ValiderEmail"))

90
00:01:36,451 --> 00:01:38,470
151. delay(2)

91
00:01:38,471 --> 00:01:40,827
155. click(findTestObject("Object Repository/Connexion Usager/btn_span_RetourAccueil"))

92
00:01:40,829 --> 00:01:42,836
159. delay(2)

93
00:01:42,838 --> 00:01:42,873
165. Get all cookies after Event NetWork in Page

94
00:01:42,875 --> 00:01:42,876
171. Navigation à URL  Qualification et Création MDP

95
00:01:42,878 --> 00:01:42,878
1. URL_CreationMDP = URLpwQualif + Token

96
00:01:42,881 --> 00:01:44,948
5. navigateToUrl(URL_CreationMDP)

97
00:01:44,951 --> 00:01:44,952
177. Navigation à URL Préprode  et Création MDP

98
00:01:44,953 --> 00:01:45,030
183. Vérification de la conformité du nouveau MDP

99
00:01:45,032 --> 00:01:45,034
3. waiting for the number of elements in the DOM to stop changing

100
00:01:45,037 --> 00:01:45,037
7. println("Créer un mot de passe sans majuscule")

101
00:01:45,041 --> 00:01:49,737
11. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "hhizaoui001!")

102
00:01:49,738 --> 00:01:54,335
15. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "hhizaoui001!")

103
00:01:54,336 --> 00:01:56,671
19. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

104
00:01:56,673 --> 00:01:56,810
23. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

105
00:01:56,812 --> 00:01:56,813
27. println("Créer un mot de passe sans minuscule")

106
00:01:56,813 --> 00:02:01,601
31. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHIZAOUI001!")

107
00:02:01,605 --> 00:02:06,444
35. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHIZAOUI001!")

108
00:02:06,447 --> 00:02:08,708
39. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

109
00:02:08,710 --> 00:02:08,865
43. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

110
00:02:08,867 --> 00:02:08,868
47. println("Créer un mot de passe sans caractère spécial")

111
00:02:08,871 --> 00:02:13,588
51. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui0010")

112
00:02:13,591 --> 00:02:18,339
55. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui0010")

113
00:02:18,341 --> 00:02:20,606
59. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

114
00:02:20,609 --> 00:02:20,749
63. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

115
00:02:20,751 --> 00:02:20,751
67. println("Créer un mot de passe sans chiffre")

116
00:02:20,753 --> 00:02:25,550
71. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaouihiza!")

117
00:02:25,553 --> 00:02:30,259
75. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaouihiza!")

118
00:02:30,261 --> 00:02:32,513
79. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

119
00:02:32,514 --> 00:02:32,644
83. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

120
00:02:32,645 --> 00:02:32,645
87. println("Saisir 2 mots de passe différents")

121
00:02:32,647 --> 00:02:37,232
91. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHizaoui001!")

122
00:02:37,234 --> 00:02:41,902
95. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHizaoui001!def")

123
00:02:41,904 --> 00:02:44,197
99. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

124
00:02:44,200 --> 00:02:44,351
103. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_ MSG_ChampsDoiventEtreIdentiques"), 1)

125
00:02:44,353 --> 00:02:44,354
107. println("Créer un mot de passe moins de 12 caractères")

126
00:02:44,357 --> 00:02:48,991
111. setText(findTestObject("Object Repository/Connexion Usager/Input_Password"), "HHiza001!")

127
00:02:48,992 --> 00:02:53,503
115. setText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), "HHiza001!")

128
00:02:53,505 --> 00:02:55,759
119. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

129
00:02:55,761 --> 00:02:55,899
123. verifyElementPresent(findTestObject("Object Repository/Connexion Usager/div_MSG_FormatNonRespecte"), 1)

130
00:02:55,903 --> 00:03:00,485
189. Renseigner PDM Valide

131
00:03:00,487 --> 00:03:05,049
193. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_ConfirmePassword"), Password)

132
00:03:05,050 --> 00:03:07,312
197. click(findTestObject("Object Repository/Connexion Usager/btn_CreerMDP"))

133
00:03:07,314 --> 00:03:10,558
203. Retour à l'accueil

134
00:03:10,560 --> 00:03:10,593
207. waitForPageLoad(5)

135
00:03:10,593 --> 00:03:10,593
17. if (StopTestCase == false)

136
00:03:10,593 --> 00:03:10,681
3. Appel Brique Réutilisable pour Identification Usager ou Agent

137
00:03:10,682 --> 00:03:10,682
1. if (Profiles == "Usager")

138
00:03:10,684 --> 00:03:15,698
1. delay(5)

139
00:03:15,700 --> 00:03:18,283
7.  Cliquer sur le lien Se Connecter :

140
00:03:18,285 --> 00:03:18,369
13. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

141
00:03:18,372 --> 00:03:18,373
3. waiting for the number of elements in the DOM to stop changing

142
00:03:18,374 --> 00:03:18,374
11. RunConfiguration: getExecutionProperties Driver 

143
00:03:18,374 --> 00:03:18,374
17. contournement du message d'erreur lié à la confidentialité :

144
00:03:18,374 --> 00:03:21,700
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

145
00:03:21,703 --> 00:03:21,703
23. contournement du message d'erreur lié à la confidentialité :

146
00:03:21,703 --> 00:03:24,705
27. delay(3)

147
00:03:24,706 --> 00:03:29,713
17. delay(5)

148
00:03:29,714 --> 00:03:34,093
23. Renseigner l'Identifiant et le mot de passe :

149
00:03:34,096 --> 00:03:34,096
27. NumEtrangerVisa = NumEtrangerVisa

150
00:03:34,097 --> 00:03:38,419
31. setEncryptedText(findTestObject("Object Repository/Connexion Usager/Input_MDP"), Password)

151
00:03:38,421 --> 00:03:42,117
35. click(findTestObject("Object Repository/Connexion Usager/btn_Sidentifier"))

152
00:03:42,118 --> 00:03:57,136
39. delay(15)

153
00:03:57,137 --> 00:03:57,254
45. Vérification position sur la page d'accueil

154
00:03:57,256 --> 00:03:57,257
7. Identification : Portail Agent

155
00:03:57,259 --> 00:03:57,260
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

156
00:03:57,262 --> 00:03:57,330
9. Appel Brique Réutilisable pour une Demande Ou Renouvelle Titre De Sejour Usager

157
00:03:57,332 --> 00:03:57,333
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

158
00:03:57,335 --> 00:04:00,344
5. delay(3)

159
00:04:00,347 --> 00:04:00,821
11. Choisir le branchement demandé par mes JDD réutilisables  

160
00:04:00,824 --> 00:04:03,831
15. delay(3)

161
00:04:03,834 --> 00:04:03,835
19. switch (PourQui)

162
00:04:03,837 --> 00:04:06,104
2. check(findTestObject("Object Repository/Page_Accueil_Usager/CheckBox_Moi-meme"))

163
00:04:06,107 --> 00:04:06,108
6. break

164
00:04:06,110 --> 00:04:08,466
25. Je valide Mon choix

165
00:04:08,468 --> 00:04:08,568
15. Appel Brique Réutilisable pour Remplir Le Formulaire Type De Titre De Séjour Usager

166
00:04:08,572 --> 00:04:08,587
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

167
00:04:08,590 --> 00:04:18,599
5. delay(10)

168
00:04:18,601 --> 00:04:18,603
9. switch (TypeTitreDeSejour)

169
00:04:18,604 --> 00:04:18,605
2. if (Titre == "Visiteur" || Titre == "Etudiant")

170
00:04:18,606 --> 00:04:25,107
1. check(findTestObject("Object Repository/Page_DemarcheRenouvellement/CheckBox_SolliciteTS_PasseportTalent"))

