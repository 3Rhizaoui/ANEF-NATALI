1
00:00:00,001 --> 00:00:00,003
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

2
00:00:00,007 --> 00:00:00,104
7. Appel Brique Réutilisable pour lancer URl ANEF pour Usager ou Agent

3
00:00:00,104 --> 00:00:00,105
5. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,107 --> 00:00:00,107
9. DriverName = ""

5
00:00:00,108 --> 00:00:03,487
13. openBrowser("")

6
00:00:03,487 --> 00:00:03,487
17. driver = getWebDriver()

7
00:00:03,487 --> 00:00:03,487
21. wrappedDriver = driver.getWrappedDriver()

8
00:00:03,493 --> 00:00:03,494
25. out.println(wrappedDriver.getClass())

9
00:00:03,495 --> 00:00:03,496
29. if (class == com.kms.katalon.selenium.driver.CRemoteWebDriver)

10
00:00:03,496 --> 00:00:03,496
2. DriverName = get("WebUI").get("browserType")

11
00:00:03,496 --> 00:00:03,496
6. println("DriverName :" + DriverName)

12
00:00:03,496 --> 00:00:03,496
10. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

13
00:00:03,501 --> 00:00:03,502
33. DriverName = DriverName

14
00:00:03,503 --> 00:00:06,509
37. delay(medium_wait)

15
00:00:06,510 --> 00:00:06,511
41. executedBrowser = getExecutedBrowser()

16
00:00:06,511 --> 00:00:06,511
45. if (Profiles == "Usager")

17
00:00:06,513 --> 00:00:06,513
1. switch (DriverName)

18
00:00:06,514 --> 00:00:06,514
4. Navigation à URL  Qualification et Création MDP

19
00:00:06,515 --> 00:00:08,973
1. navigateToUrl(URL_ANEFQualif)

20
00:00:08,975 --> 00:00:08,976
10. Navigation à URL Préprode  et Création MDP

21
00:00:08,977 --> 00:00:09,006
14. maximizeWindow()

22
00:00:09,007 --> 00:00:09,008
18. System.setProperty("webdriver.chrome.driver", getChromeDriverPath())

23
00:00:09,009 --> 00:00:09,010
22. System.setProperty("webdriver.chrome.logfile", getProjectDir() + "/Dump/chromedriver.log")

24
00:00:09,010 --> 00:00:09,082
28. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

25
00:00:09,083 --> 00:00:09,085
3. waiting for the number of elements in the DOM to stop changing

26
00:00:09,088 --> 00:00:09,088
11. RunConfiguration: getExecutionProperties Driver 

27
00:00:09,089 --> 00:00:09,090
17. contournement du message d'erreur lié à la confidentialité :

28
00:00:09,092 --> 00:00:09,254
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

29
00:00:09,255 --> 00:00:11,507
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

30
00:00:11,509 --> 00:00:13,895
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

31
00:00:13,897 --> 00:00:13,898
23. contournement du message d'erreur lié à la confidentialité :

32
00:00:13,900 --> 00:00:16,920
27. delay(3)

33
00:00:16,921 --> 00:00:21,944
32. delay(5)

34
00:00:21,945 --> 00:00:22,119
38. Vérification de l'étape :

35
00:00:22,120 --> 00:00:22,120
42. break

36
00:00:22,122 --> 00:00:22,123
49. if (Profiles == "Agent")

37
00:00:22,124 --> 00:00:22,126
2. println("Vérifier le Portail de votre connexion Usager ou Agent")

38
00:00:22,127 --> 00:00:22,207
13. Appel Brique Réutilisable pour Créer un Compte Usager

39
00:00:22,208 --> 00:00:22,211
5. Call Highlight.on() automatically

40
00:00:22,215 --> 00:00:22,244
9. waitForPageLoad(5)

41
00:00:22,245 --> 00:00:24,832
15. Cliquer sur le lien Se Connecter :

42
00:00:24,833 --> 00:00:24,834
19. if (EnvExec == "URL_ANEFQualif")

43
00:00:24,835 --> 00:00:24,920
3. Appel de l'action Réutilisable pour contourner l'erreur lié à la confidentialité

44
00:00:24,922 --> 00:00:24,922
3. waiting for the number of elements in the DOM to stop changing

45
00:00:24,924 --> 00:00:24,924
11. RunConfiguration: getExecutionProperties Driver 

46
00:00:24,926 --> 00:00:24,926
17. contournement du message d'erreur lié à la confidentialité :

47
00:00:24,927 --> 00:00:25,082
1. if (verifyElementPresent(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), 2, OPTIONAL))

48
00:00:25,082 --> 00:00:27,359
1. click(findTestObject("Object Repository/Connexion Usager/Btn_Parametres Avances"), OPTIONAL)

49
00:00:27,363 --> 00:00:29,770
5. click(findTestObject("Object Repository/Connexion Usager/Link_Proceed-Link"), OPTIONAL)

50
00:00:29,772 --> 00:00:29,773
23. contournement du message d'erreur lié à la confidentialité :

51
00:00:29,774 --> 00:00:32,783
27. delay(3)

52
00:00:32,784 --> 00:00:36,068
25. Première visiteq? Créez votre compte :

53
00:00:36,070 --> 00:00:36,633
29. waitForPageLoad(5)

54
00:00:36,634 --> 00:00:36,635
33. println("NumEtrangerVisa = " + NumEtrangerVisa)

55
00:00:36,637 --> 00:00:41,225
39. Fournir Le Numéro de votre visa ou votre numéro étranger :

56
00:00:41,226 --> 00:00:41,228
45.  Fournir La Date de début de validité :

57
00:00:41,228 --> 00:00:41,229
49. DateDebut = tools.MyStringTools.ParsedDateDebut()

58
00:00:41,230 --> 00:00:41,231
53. ParsedDateDebut = tools.MyStringTools.ParsedDateDebut()

59
00:00:41,233 --> 00:00:45,566
57. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Jour"), ParsedDateDebut[0])

60
00:00:45,567 --> 00:00:47,948
61. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Select_Mois"), ParsedDateDebut[1])

61
00:00:47,948 --> 00:00:52,318
65. setText(findTestObject("Object Repository/Connexion Usager/Date Debut Validite/Input_Annee"), ParsedDateDebut[2])

62
00:00:52,320 --> 00:00:52,321
71.  Fournir La Date de fin de validité :

63
00:00:52,324 --> 00:00:52,324
75. DateFin = tools.MyStringTools.ParsedDateFin()

64
00:00:52,325 --> 00:00:52,326
79. ParsedDateFin = tools.MyStringTools.ParsedDateFin()

65
00:00:52,327 --> 00:00:56,651
83. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Jour"), ParsedDateFin[0])

66
00:00:56,653 --> 00:00:59,209
87. selectOptionByIndex(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Select_Mois"), ParsedDateFin[1])

67
00:00:59,211 --> 00:01:03,583
91. setText(findTestObject("Object Repository/Connexion Usager/Date Fin Validite/Input_Annee"), ParsedDateFin[2])

68
00:01:03,586 --> 00:01:05,885
97. Validation de la page pour la création du compte :

69
00:01:05,887 --> 00:01:05,969
105. Appel Brique Réutilisable VerificationCertainesInformationsSontIncorrectes

70
00:01:05,971 --> 00:01:08,977
5.  Exit Action ou on passe à la création

71
00:01:08,978 --> 00:01:08,979
9. StopTestCase = false

72
00:01:08,980 --> 00:01:09,123
13. MsgAlertPresent = verifyElementVisible(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

73
00:01:09,126 --> 00:01:09,126
17. if (MsgAlertPresent)

74
00:01:09,127 --> 00:01:09,281
1. TextAlert = getText(findTestObject("Object Repository/Connexion Usager/lbl_CertainesInformationsSaisiesSontIncorrectes"), OPTIONAL)

75
00:01:09,283 --> 00:01:09,283
5. tools.markWarningAndStop.markWarningAndStopTest(TextAlert)

76
00:01:09,285 --> 00:01:09,286
9. MsgStopTestCase = TextAlert

77
00:01:09,286 --> 00:01:09,288
13. return null

78
00:01:09,290 --> 00:01:09,290
111. Exit TestCase

79
00:01:09,291 --> 00:01:09,292
1. return null

80
00:01:09,293 --> 00:01:09,294
17. if (StopTestCase == false)

